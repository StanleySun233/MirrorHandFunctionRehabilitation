# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import json
import sys

import requests
from PyQt5 import QtCore, QtWidgets
from PyQt5.QtWidgets import QMessageBox

import config


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(600, 500)
        self.setStyleSheet('QWidget{background-color:white}')

        self.userlineEdit = QtWidgets.QLineEdit(Form)
        self.userlineEdit.setGeometry(QtCore.QRect(220, 80, 260, 40))

        self.userNameLabel = QtWidgets.QLabel(Form)
        self.userNameLabel.setGeometry(QtCore.QRect(90, 80, 70, 40))
        self.userNameLabel.setStyleSheet('font:12pt')

        self.passwordlineEdit = QtWidgets.QLineEdit(Form)
        self.passwordlineEdit.setGeometry(QtCore.QRect(220, 160, 260, 40))
        self.passwordlineEdit.setEchoMode(QtWidgets.QLineEdit.Password)

        self.cpasswordlineEdit = QtWidgets.QLineEdit(Form)
        self.cpasswordlineEdit.setGeometry(QtCore.QRect(220, 240, 260, 40))
        self.cpasswordlineEdit.setEchoMode(QtWidgets.QLineEdit.Password)

        self.passwordLabel = QtWidgets.QLabel(Form)
        self.passwordLabel.setGeometry(QtCore.QRect(90, 160, 70, 40))
        self.passwordLabel.setStyleSheet('font:14pt')

        self.cpasswordLabel = QtWidgets.QLabel(Form)
        self.cpasswordLabel.setGeometry(QtCore.QRect(90, 240, 100, 40))
        self.cpasswordLabel.setStyleSheet('font:12pt')

        self.confirmButton = QtWidgets.QPushButton(Form)
        self.confirmButton.setGeometry(QtCore.QRect(220, 320, 160, 40))
        self.confirmButton.setStyleSheet('font:16pt')

        self.reset_Password = QtWidgets.QLabel(Form)
        self.reset_Password.setGeometry(QtCore.QRect(220, 20, 160, 30))
        self.reset_Password.setStyleSheet('font:16pt')

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.userNameLabel.setText(_translate("Form", "用户名"))
        self.passwordLabel.setText(_translate("Form", "密 码"))
        self.cpasswordLabel.setText(_translate("Form", "确认密码"))
        self.confirmButton.setText(_translate("Form", "确认"))
        self.reset_Password.setText(_translate("Form", "忘记密码"))


class ForgetPassword(QtWidgets.QMainWindow, Ui_Form):
    # singal = pyqtSignal(list)
    def __init__(self, accountId):
        super(ForgetPassword, self).__init__()
        _translate = QtCore.QCoreApplication.translate
        self.setupUi(self)
        self.confirmButton.mousePressEvent = self.confirmButtonClick
        self.account = accountId

        if accountId:
            # 登录界面使用，不会触发，登录完成以后，只允许修改当前登录账号。
            account = json.loads(requests.post(config.userGetAccountById, data={'id': accountId}).content.decode('utf-8'))['data']['account']
            self.userlineEdit.setText(_translate("Form", account))
            self.userlineEdit.setReadOnly(True)

    def confirmButtonClick(self, *args):
        user = self.userlineEdit.text()
        password = self.passwordlineEdit.text()
        cpassword = self.cpasswordlineEdit.text()  # 确认密码
        if cpassword != password:
            QMessageBox.Warning(self, '警告！', '两次输入密码不一致')
            return

        data = {'account': user, 'password': password}
        resp = requests.post(config.userForget, data=data)

        if resp.status_code != 200:
            QMessageBox.warning(self, "忘记密码", "网络连接异常", QMessageBox.Yes, QMessageBox.Yes)
        res = json.loads(resp.content.decode('utf-8'))
        if res['code'] == 1:
            QMessageBox.warning(self, "忘记密码", res['msg'], QMessageBox.Yes, QMessageBox.Yes)
            self.close()
        else:
            QMessageBox.warning(self, "忘记密码", res['msg'], QMessageBox.Yes, QMessageBox.Yes)


if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    gui = ForgetPassword(None)
    gui.show()
    sys.exit(app.exec_())
