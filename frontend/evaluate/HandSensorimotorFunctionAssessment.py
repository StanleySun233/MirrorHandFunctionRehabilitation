import json
import sys

import requests
from PyQt5 import QtCore, QtWidgets
from PyQt5.QtCore import Qt, QDate
from PyQt5.QtWidgets import QSlider, QFileDialog, QMessageBox

import config
import tool


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.resize(1600, 1080)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStyleSheet('background-color:rgb(242, 249, 255)')

        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setGeometry(QtCore.QRect(50, 80, 1500, 1000))

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(400, 10, 560, 40))
        self.label.setStyleSheet("font:16pt")

        self.totalComBox = QtWidgets.QComboBox(self.centralwidget)
        self.totalComBox.setGeometry(QtCore.QRect(800, 10, 560, 40))
        self.totalComBox.addItems(['','VAS疼痛视觉模拟','Fugl-Meyer上肢运动功能评定','Fugl-Meyer上肢感觉功能评定','手运动功能状态评分',\
                                   '积木障碍盒测试','九孔柱测试','ARAT上肢动作研究量表','WOLF运动功能测试'])
        self.totalComBox.setStyleSheet("font:16pt;background:white")

        self.page = QtWidgets.QWidget()
        self.label_2 = QtWidgets.QLabel(self.page)
        self.label_2.setGeometry(QtCore.QRect(500, 10, 400, 41))
        self.label_2.setAlignment(Qt.AlignCenter)
        self.label_2.setStyleSheet('font:16pt')

        self.label_3 = QtWidgets.QLabel(self.page)
        self.label_3.setGeometry(QtCore.QRect(80, 60, 200, 40))
        self.label_3.setStyleSheet('font:14pt')

        self.vas_name = QtWidgets.QLabel(self.page)
        self.vas_name.setGeometry(QtCore.QRect(160, 60, 200, 40))
        self.vas_name.setStyleSheet('font:14pt')

        self.label_4 = QtWidgets.QLabel(self.page)
        self.label_4.setGeometry(QtCore.QRect(280, 60, 200, 40))
        self.label_4.setStyleSheet('font:14pt')

        self.vas_gender = QtWidgets.QLabel(self.page)
        self.vas_gender.setGeometry(QtCore.QRect(360, 60, 200, 40))
        self.vas_gender.setStyleSheet('font:14pt')

        self.label_5 = QtWidgets.QLabel(self.page)
        self.label_5.setGeometry(QtCore.QRect(480, 60, 200, 40))
        self.label_5.setStyleSheet('font:14pt')

        self.vas_age = QtWidgets.QLabel(self.page)
        self.vas_age.setGeometry(QtCore.QRect(560, 60, 200, 40))
        self.vas_age.setStyleSheet('font:14pt')

        self.label_6 = QtWidgets.QLabel(self.page)
        self.label_6.setGeometry(QtCore.QRect(680, 60, 200, 40))
        self.label_6.setStyleSheet('font:14pt')

        self.vas_hand = QtWidgets.QLabel(self.page)
        self.vas_hand.setGeometry(QtCore.QRect(760, 60, 200, 40))
        self.vas_hand.setStyleSheet('font:14pt')

        self.label_7 = QtWidgets.QLabel(self.page)
        self.label_7.setGeometry(QtCore.QRect(30, 340, 200, 40))
        self.label_7.setStyleSheet('font:14pt')

        self.label_8 = QtWidgets.QLabel(self.page)
        self.label_8.setGeometry(QtCore.QRect(1390, 340, 200, 40))
        self.label_8.setStyleSheet('font:14pt')

        self.label_9 = QtWidgets.QLabel(self.page)
        self.label_9.setGeometry(QtCore.QRect(60, 180, 200, 40))
        self.label_9.setStyleSheet('font:14pt')

        self.label_10 = QtWidgets.QLabel(self.page)
        self.label_10.setGeometry(QtCore.QRect(200, 180, 200, 40))
        self.label_10.setStyleSheet('font:14pt')

        self.label_11 = QtWidgets.QLabel(self.page)
        self.label_11.setGeometry(QtCore.QRect(330, 180, 200, 40))
        self.label_11.setStyleSheet('font:14pt')

        self.label_12 = QtWidgets.QLabel(self.page)
        self.label_12.setGeometry(QtCore.QRect(465, 180, 200, 40))
        self.label_12.setStyleSheet('font:14pt')

        self.label_13 = QtWidgets.QLabel(self.page)
        self.label_13.setGeometry(QtCore.QRect(600, 180, 200, 40))
        self.label_13.setStyleSheet('font:14pt')

        self.label_14 = QtWidgets.QLabel(self.page)
        self.label_14.setGeometry(QtCore.QRect(735, 180, 200, 40))
        self.label_14.setStyleSheet('font:14pt')

        self.label_15 = QtWidgets.QLabel(self.page)
        self.label_15.setGeometry(QtCore.QRect(870, 180, 200, 40))
        self.label_15.setStyleSheet('font:14pt')

        self.label_16 = QtWidgets.QLabel(self.page)  # 7
        self.label_16.setGeometry(QtCore.QRect(1000, 180, 200, 40))
        self.label_16.setStyleSheet('font:14pt')

        self.label_17= QtWidgets.QLabel(self.page)  # 8
        self.label_17.setGeometry(QtCore.QRect(1135, 180, 200, 40))
        self.label_17.setStyleSheet('font:14pt')

        self.vas_s1 = QSlider(Qt.Horizontal, self.page)
        self.vas_s1.setGeometry(QtCore.QRect(60, 230, 1360, 100))
        self.vas_s1.setStyleSheet('font:16pt;')
        # 设置最小值
        self.vas_s1.setMinimum(0)
        # 设置最大值
        self.vas_s1.setMaximum(10)
        # 设置步长
        self.vas_s1.setSingleStep(1)
        # 设置当前值
        self.vas_s1.setValue(0)
        # 刻度位置在下方
        self.vas_s1.setTickPosition(QSlider.TicksBothSides)
        # 设置刻度间隔
        self.vas_s1.setTickInterval(1)

        self.label_18 = QtWidgets.QLabel(self.page)  # 9
        self.label_18.setGeometry(QtCore.QRect(1270, 180, 200, 40))
        self.label_18.setStyleSheet('font:14pt')

        self.label_19 = QtWidgets.QLabel(self.page)  # 10
        self.label_19.setGeometry(QtCore.QRect(1400, 180, 200, 40))
        self.label_19.setStyleSheet('font:14pt')

        self.label_20 = QtWidgets.QLabel(self.page)
        self.label_20.setGeometry(QtCore.QRect(30, 440, 200, 40))
        self.label_20.setStyleSheet('font:14pt')

        self.vas_upperExtremityPain = QtWidgets.QLineEdit(self.page)
        self.vas_upperExtremityPain.setGeometry(QtCore.QRect(220, 440, 400, 40))
        self.vas_upperExtremityPain.setStyleSheet('font:14pt;background:white')

        self.label_21 = QtWidgets.QLabel(self.page)
        self.label_21.setGeometry(QtCore.QRect(700, 440, 200, 40))
        self.label_21.setStyleSheet('font:14pt')

        self.vas_result = QtWidgets.QComboBox(self.page)
        self.vas_result.setGeometry(QtCore.QRect(780, 440, 400, 40))
        self.vas_result.addItems(['', '轻度疼痛（1-3）', '中度疼痛（4-6）', '重度疼痛（7-10）'])
        self.vas_result.setStyleSheet('font:14pt;background:white')

        self.label_22 = QtWidgets.QLabel(self.page)
        self.label_22.setGeometry(QtCore.QRect(100, 540, 200, 40))
        self.label_22.setStyleSheet('font:14pt')

        self.vas_dateEdit = QtWidgets.QDateEdit(QDate.currentDate(), self.page)
        self.vas_dateEdit.setGeometry(QtCore.QRect(270, 540, 260, 40))
        self.vas_dateEdit.setStyleSheet("font:16pt;background:white")
        self.vas_dateEdit.setCalendarPopup(True)

        self.vas_saveButton = QtWidgets.QPushButton(self.page)
        self.vas_saveButton.setGeometry(QtCore.QRect(850, 540, 120, 40))
        self.vas_saveButton.setStyleSheet("background-color:rgb(1, 144, 202);font:12pt;color:white")

        self.vas_downLoadButton = QtWidgets.QPushButton(self.page)
        self.vas_downLoadButton.setGeometry(QtCore.QRect(990, 540, 120, 40))
        self.vas_downLoadButton.setStyleSheet("background-color:rgb(1, 144, 202);font:12pt;color:white")
        self.stackedWidget.addWidget(self.page)

        self.page_2 = QtWidgets.QWidget()
        self.label_23 = QtWidgets.QLabel(self.page_2)
        self.label_23.setGeometry(QtCore.QRect(460, 10, 500, 40))
        self.label_23.setStyleSheet("font:16pt")

        self.label_24 = QtWidgets.QLabel(self.page_2)
        self.label_24.setGeometry(QtCore.QRect(80, 60, 200, 40))
        self.label_24.setStyleSheet("font:14pt")

        self.FuglMeyerMotion_name = QtWidgets.QLabel(self.page_2)
        self.FuglMeyerMotion_name.setGeometry(QtCore.QRect(160, 60, 200, 40))
        self.FuglMeyerMotion_name.setStyleSheet("font:14pt")

        self.label_25 = QtWidgets.QLabel(self.page_2)
        self.label_25.setGeometry(QtCore.QRect(280, 60, 200, 40))
        self.label_25.setStyleSheet("font:14pt")

        self.FuglMeyerMotion_gender = QtWidgets.QLabel(self.page_2)
        self.FuglMeyerMotion_gender.setGeometry(QtCore.QRect(360, 60, 200, 40))
        self.FuglMeyerMotion_gender.setStyleSheet("font:14pt")

        self.label_26 = QtWidgets.QLabel(self.page_2)
        self.label_26.setGeometry(QtCore.QRect(480, 60, 200, 40))
        self.label_26.setStyleSheet("font:14pt")

        self.FuglMeyerMotion_age = QtWidgets.QLabel(self.page_2)
        self.FuglMeyerMotion_age.setGeometry(QtCore.QRect(560, 60, 200, 40))
        self.FuglMeyerMotion_age.setStyleSheet("font:14pt")

        self.label_27 = QtWidgets.QLabel(self.page_2)
        self.label_27.setGeometry(QtCore.QRect(680, 60, 200, 40))
        self.label_27.setStyleSheet("font:14pt")

        self.FuglMeyerMotion_hand = QtWidgets.QLabel(self.page_2)
        self.FuglMeyerMotion_hand.setGeometry(QtCore.QRect(760, 60, 200, 40))
        self.FuglMeyerMotion_hand.setStyleSheet("font:14pt")

        self.FuglMeyerMotion_tableWidget = QtWidgets.QTableWidget(self.page_2)
        self.FuglMeyerMotion_tableWidget.setGeometry(QtCore.QRect(20, 120, 1460, 700))
        self.FuglMeyerMotion_tableWidget.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.FuglMeyerMotion_tableWidget.setStyleSheet('background:white;font:10pt')
        self.FuglMeyerMotion_tableWidget.setColumnCount(5)
        self.FuglMeyerMotion_tableWidget.setRowCount(43)
        self.FuglMeyerMotion_tableWidget.verticalHeader().setVisible(False)

        item = QtWidgets.QTableWidgetItem()
        self.FuglMeyerMotion_tableWidget.setHorizontalHeaderItem(0, item)
        self.FuglMeyerMotion_tableWidget.setColumnWidth(0, 455)
        item = QtWidgets.QTableWidgetItem()
        self.FuglMeyerMotion_tableWidget.setHorizontalHeaderItem(1, item)
        self.FuglMeyerMotion_tableWidget.setColumnWidth(1, 300)
        item = QtWidgets.QTableWidgetItem()
        self.FuglMeyerMotion_tableWidget.setHorizontalHeaderItem(2, item)
        self.FuglMeyerMotion_tableWidget.setColumnWidth(2, 290)
        item = QtWidgets.QTableWidgetItem()
        self.FuglMeyerMotion_tableWidget.setHorizontalHeaderItem(3, item)
        self.FuglMeyerMotion_tableWidget.setColumnWidth(3, 280)
        item = QtWidgets.QTableWidgetItem()
        self.FuglMeyerMotion_tableWidget.setHorizontalHeaderItem(4, item)
        self.FuglMeyerMotion_tableWidget.setColumnWidth(4, 100)

        item = QtWidgets.QTableWidgetItem('上肢')
        self.FuglMeyerMotion_tableWidget.setItem(0, 0, item)
        self.FuglMeyerMotion_tableWidget.setSpan(0, 0, 1, 5)
        item = QtWidgets.QTableWidgetItem('Ⅰ.反射（坐位）')
        self.FuglMeyerMotion_tableWidget.setItem(1, 0, item)
        self.FuglMeyerMotion_tableWidget.setSpan(1, 0, 1, 5)
        item = QtWidgets.QTableWidgetItem('（1）肱二头肌')
        self.FuglMeyerMotion_tableWidget.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem('不能引起反射活动')
        self.FuglMeyerMotion_tableWidget.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem('能引起反射活动')
        self.FuglMeyerMotion_tableWidget.setItem(2, 3, item)
        item = QtWidgets.QTableWidgetItem('（2）肱三头肌')
        self.FuglMeyerMotion_tableWidget.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(3, 3, item)
        item = QtWidgets.QTableWidgetItem('Ⅱ.屈肌协同运动（坐位，起始位为肩内收、内旋，肘伸直，前臂旋前，指令“手心向上，屈肘，用手摸同侧耳朵，肩关节外展超过90°”）')
        self.FuglMeyerMotion_tableWidget.setItem(4, 0, item)
        self.FuglMeyerMotion_tableWidget.setSpan(4, 0, 1, 5)
        item = QtWidgets.QTableWidgetItem('（3）肩上提')
        self.FuglMeyerMotion_tableWidget.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem('完全不能进行')
        self.FuglMeyerMotion_tableWidget.setItem(5, 1, item)
        item = QtWidgets.QTableWidgetItem('部分完成')
        self.FuglMeyerMotion_tableWidget.setItem(5, 2, item)
        item = QtWidgets.QTableWidgetItem('无停顿地充分完成')
        self.FuglMeyerMotion_tableWidget.setItem(5, 3, item)
        item = QtWidgets.QTableWidgetItem('（4）肩后缩')
        self.FuglMeyerMotion_tableWidget.setItem(6, 0, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(6, 1, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(6, 2, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(6, 3, item)
        item = QtWidgets.QTableWidgetItem('（5）肩外展≥90°')
        self.FuglMeyerMotion_tableWidget.setItem(7, 0, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(7, 1, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(7, 2, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(7, 3, item)
        item = QtWidgets.QTableWidgetItem('（6）肩外旋')
        self.FuglMeyerMotion_tableWidget.setItem(8, 0, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(8, 1, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(8, 2, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(8, 3, item)
        item = QtWidgets.QTableWidgetItem('（7）肘屈曲')
        self.FuglMeyerMotion_tableWidget.setItem(9, 0, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(9, 1, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(9, 2, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(9, 3, item)
        item = QtWidgets.QTableWidgetItem('（8）前臂旋后')
        self.FuglMeyerMotion_tableWidget.setItem(10, 0, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(10, 1, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(10, 2, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(10, 3, item)
        item = QtWidgets.QTableWidgetItem('Ⅲ.伸肌协同运动（坐位，起始位为肘屈曲、旋后，指令“内收、内旋肩关节，伸肘，前臂旋前，将胳膊伸向对侧膝盖”）')
        self.FuglMeyerMotion_tableWidget.setItem(11, 0, item)
        self.FuglMeyerMotion_tableWidget.setSpan(11, 0, 1, 5)
        item = QtWidgets.QTableWidgetItem('（9）肩内收、内旋')
        self.FuglMeyerMotion_tableWidget.setItem(12, 0, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(12, 1, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(12, 2, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(12, 3, item)
        item = QtWidgets.QTableWidgetItem('（10）肘伸展')
        self.FuglMeyerMotion_tableWidget.setItem(13, 0, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(13, 1, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(13, 2, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(13, 3, item)
        item = QtWidgets.QTableWidgetItem('（11）前臂旋前')
        self.FuglMeyerMotion_tableWidget.setItem(14, 0, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(14, 1, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(14, 2, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(14, 3, item)
        item = QtWidgets.QTableWidgetItem('Ⅳ.伴有协同运动的活动')
        self.FuglMeyerMotion_tableWidget.setItem(15, 0, item)
        self.FuglMeyerMotion_tableWidget.setSpan(15, 0, 1, 5)
        item = QtWidgets.QTableWidgetItem('（12）手触腰椎（坐位，手置于大腿上，指令“把手放到背后”）')
        self.FuglMeyerMotion_tableWidget.setRowHeight(16, 80)
        self.FuglMeyerMotion_tableWidget.setItem(16, 0, item)
        item = QtWidgets.QTableWidgetItem('没有明显活动')
        self.FuglMeyerMotion_tableWidget.setItem(16, 1, item)
        item = QtWidgets.QTableWidgetItem('手仅可向后越过髂前上棘')
        self.FuglMeyerMotion_tableWidget.setItem(16, 2, item)
        item = QtWidgets.QTableWidgetItem('能顺利进行')
        self.FuglMeyerMotion_tableWidget.setItem(16, 3, item)
        item = QtWidgets.QTableWidgetItem('（13）肩关节屈曲90°，肘关节伸直（坐位，手置于大腿上，肘必须伸直，前臂可旋前或中立位）')
        self.FuglMeyerMotion_tableWidget.setItem(17, 0, item)
        self.FuglMeyerMotion_tableWidget.setRowHeight(17, 80)
        item = QtWidgets.QTableWidgetItem('开始时手臂立即外展或肘关节屈曲')
        self.FuglMeyerMotion_tableWidget.setItem(17, 1, item)
        item = QtWidgets.QTableWidgetItem('在接近规定位置时肩关节外展或肘关节屈曲')
        self.FuglMeyerMotion_tableWidget.setItem(17, 2, item)
        item = QtWidgets.QTableWidgetItem('能顺利充分完成')
        self.FuglMeyerMotion_tableWidget.setItem(17, 3, item)
        item = QtWidgets.QTableWidgetItem('（14）肩0°，肘屈90°，前臂旋前、旋后（起始位前臂旋后）')
        self.FuglMeyerMotion_tableWidget.setItem(18, 0, item)
        self.FuglMeyerMotion_tableWidget.setRowHeight(18, 80)
        item = QtWidgets.QTableWidgetItem('不能屈肘或前臂不能旋前')
        self.FuglMeyerMotion_tableWidget.setItem(18, 1, item)
        item = QtWidgets.QTableWidgetItem('肩、肘位正确，基本上能旋前、旋后')
        self.FuglMeyerMotion_tableWidget.setItem(18, 2, item)
        item = QtWidgets.QTableWidgetItem('顺利完成')
        self.FuglMeyerMotion_tableWidget.setItem(18, 3, item)
        item = QtWidgets.QTableWidgetItem('Ⅴ.脱离协同运动的活动')
        self.FuglMeyerMotion_tableWidget.setItem(19, 0, item)
        self.FuglMeyerMotion_tableWidget.setSpan(19, 0, 1, 5)
        item = QtWidgets.QTableWidgetItem('（15）肩关节外展90°，肘伸直，前臂旋前（起始位为坐位，手、臂处于休息位）')
        self.FuglMeyerMotion_tableWidget.setItem(20, 0, item)
        self.FuglMeyerMotion_tableWidget.setRowHeight(20, 80)
        item = QtWidgets.QTableWidgetItem('开始时肘就屈曲，前臂偏离方向，不能旋前')
        self.FuglMeyerMotion_tableWidget.setItem(20, 1, item)
        item = QtWidgets.QTableWidgetItem('可部分完成此动作或在活动时肘关节屈曲或前臂不能旋前')
        self.FuglMeyerMotion_tableWidget.setItem(20, 2, item)
        item = QtWidgets.QTableWidgetItem('顺利完成')
        self.FuglMeyerMotion_tableWidget.setItem(20, 3, item)
        item = QtWidgets.QTableWidgetItem('（16）肩关节自前屈90°举臂过头，肘伸直，前臂中立位（起始位为坐位，肘伸直，手休息位置于膝上）')
        self.FuglMeyerMotion_tableWidget.setItem(21, 0, item)
        self.FuglMeyerMotion_tableWidget.setRowHeight(21, 100)
        item = QtWidgets.QTableWidgetItem('开始时肘关节屈曲或肩关节发生外展')
        self.FuglMeyerMotion_tableWidget.setItem(21, 1, item)
        item = QtWidgets.QTableWidgetItem('肩屈曲中途、肘关节屈曲、肩关节外展')
        self.FuglMeyerMotion_tableWidget.setItem(21, 2, item)
        item = QtWidgets.QTableWidgetItem('顺利完成')
        self.FuglMeyerMotion_tableWidget.setItem(21, 3, item)
        item = QtWidgets.QTableWidgetItem('（17）肩屈曲30°～90°，肘伸直，前臂旋前旋后（起始位为坐位，肘伸直，手休息位置于膝上）')
        self.FuglMeyerMotion_tableWidget.setItem(22, 0, item)
        self.FuglMeyerMotion_tableWidget.setRowHeight(22, 80)
        item = QtWidgets.QTableWidgetItem('前臂旋前旋后完全不能进行或肩肘位不正确')
        self.FuglMeyerMotion_tableWidget.setItem(22, 1, item)
        item = QtWidgets.QTableWidgetItem('肩、肘位置正确，基本上能完成旋前旋后')
        self.FuglMeyerMotion_tableWidget.setItem(22, 2, item)
        item = QtWidgets.QTableWidgetItem('顺利完成')
        self.FuglMeyerMotion_tableWidget.setItem(22, 3, item)
        item = QtWidgets.QTableWidgetItem('Ⅵ.正常反射（坐位，如Ⅴ所得分<6分，则此项判0分）')
        self.FuglMeyerMotion_tableWidget.setItem(23, 0, item)
        self.FuglMeyerMotion_tableWidget.setSpan(23, 0, 1, 5)
        item = QtWidgets.QTableWidgetItem('（18）检查肱二头肌、肱三头肌和指屈肌三种反射')
        self.FuglMeyerMotion_tableWidget.setItem(24, 0, item)
        self.FuglMeyerMotion_tableWidget.setRowHeight(24, 80)
        item = QtWidgets.QTableWidgetItem('至少2～3个反射明显亢进')
        self.FuglMeyerMotion_tableWidget.setItem(24, 1, item)
        item = QtWidgets.QTableWidgetItem('一个反射明显亢进或至少二个反射活跃')
        self.FuglMeyerMotion_tableWidget.setItem(24, 2, item)
        item = QtWidgets.QTableWidgetItem('活跃反射≤1个，且无反射亢进')
        self.FuglMeyerMotion_tableWidget.setItem(24, 3, item)
        item = QtWidgets.QTableWidgetItem('Ⅶ.腕')
        self.FuglMeyerMotion_tableWidget.setItem(25, 0, item)
        self.FuglMeyerMotion_tableWidget.setSpan(25, 0, 1, 5)
        item = QtWidgets.QTableWidgetItem('（19）稳定性，肩0°，肘屈90°时，腕背屈（坐位，手、臂处于休息位）')
        self.FuglMeyerMotion_tableWidget.setItem(26, 0, item)
        self.FuglMeyerMotion_tableWidget.setRowHeight(26, 80)
        item = QtWidgets.QTableWidgetItem('不能背屈腕关节达15°')
        self.FuglMeyerMotion_tableWidget.setItem(26, 1, item)
        item = QtWidgets.QTableWidgetItem('可完成腕背屈，但不能抗拒阻力')
        self.FuglMeyerMotion_tableWidget.setItem(26, 2, item)
        item = QtWidgets.QTableWidgetItem('施加轻微阻力仍可保持腕背屈')
        self.FuglMeyerMotion_tableWidget.setItem(26, 3, item)
        item = QtWidgets.QTableWidgetItem('（20）肩0°，肘屈90°，腕在背屈15°～掌屈15°范围内屈伸（坐位，手、臂处于休息位）')
        self.FuglMeyerMotion_tableWidget.setItem(27, 0, item)
        self.FuglMeyerMotion_tableWidget.setRowHeight(27, 80)
        item = QtWidgets.QTableWidgetItem('不能随意屈伸')
        self.FuglMeyerMotion_tableWidget.setItem(27, 1, item)
        item = QtWidgets.QTableWidgetItem('不能在全关节范围内主动活动腕关节')
        self.FuglMeyerMotion_tableWidget.setItem(27, 2, item)
        item = QtWidgets.QTableWidgetItem('能平滑地不停顿地进行')
        self.FuglMeyerMotion_tableWidget.setItem(27, 3, item)
        item = QtWidgets.QTableWidgetItem('（21）稳定性，肩前屈30°，肘0°，腕背屈（坐位，肘伸直，手休息位置于膝上，前臂旋前）')
        self.FuglMeyerMotion_tableWidget.setItem(28, 0, item)
        self.FuglMeyerMotion_tableWidget.setRowHeight(28, 80)
        item = QtWidgets.QTableWidgetItem('不能背屈腕关节达15°')
        self.FuglMeyerMotion_tableWidget.setItem(28, 1, item)
        item = QtWidgets.QTableWidgetItem('可完成腕背屈，但不能抗拒阻力')
        self.FuglMeyerMotion_tableWidget.setItem(28, 2, item)
        item = QtWidgets.QTableWidgetItem('施加轻微阻力仍可保持腕背屈')
        self.FuglMeyerMotion_tableWidget.setItem(28, 3, item)
        item = QtWidgets.QTableWidgetItem('（22）腕屈伸（坐位，肘伸直，手休息位置于膝上，前臂旋前）')
        self.FuglMeyerMotion_tableWidget.setItem(29, 0, item)
        self.FuglMeyerMotion_tableWidget.setRowHeight(29, 80)
        item = QtWidgets.QTableWidgetItem('不能随意屈伸')
        self.FuglMeyerMotion_tableWidget.setItem(29, 1, item)
        item = QtWidgets.QTableWidgetItem('不能在全关节范围内主动活动腕关节')
        self.FuglMeyerMotion_tableWidget.setItem(29, 2, item)
        item = QtWidgets.QTableWidgetItem('能平滑地不停顿地进行')
        self.FuglMeyerMotion_tableWidget.setItem(29, 3, item)
        item = QtWidgets.QTableWidgetItem('（23）腕环形运动（坐位，屈肘90°，前臂旋前）')
        self.FuglMeyerMotion_tableWidget.setItem(30, 0, item)
        self.FuglMeyerMotion_tableWidget.setRowHeight(30, 80)
        item = QtWidgets.QTableWidgetItem('不能进行')
        self.FuglMeyerMotion_tableWidget.setItem(30, 1, item)
        item = QtWidgets.QTableWidgetItem('活动费力或不完全')
        self.FuglMeyerMotion_tableWidget.setItem(30, 2, item)
        item = QtWidgets.QTableWidgetItem('正常完成')
        self.FuglMeyerMotion_tableWidget.setItem(30, 3, item)
        item = QtWidgets.QTableWidgetItem('Ⅷ.手（坐位，手置于桌上）')
        self.FuglMeyerMotion_tableWidget.setItem(31, 0, item)
        self.FuglMeyerMotion_tableWidget.setSpan(31, 0, 1, 5)
        item = QtWidgets.QTableWidgetItem('（24）集团屈曲（起始位为手指伸直）')
        self.FuglMeyerMotion_tableWidget.setItem(32, 0, item)
        self.FuglMeyerMotion_tableWidget.setRowHeight(32, 80)
        item = QtWidgets.QTableWidgetItem('不能屈曲')
        self.FuglMeyerMotion_tableWidget.setItem(32, 1, item)
        item = QtWidgets.QTableWidgetItem('能屈曲但不充分')
        self.FuglMeyerMotion_tableWidget.setItem(32, 2, item)
        item = QtWidgets.QTableWidgetItem('能完全主动屈曲')
        self.FuglMeyerMotion_tableWidget.setItem(32, 3, item)
        item = QtWidgets.QTableWidgetItem('（25）集团伸展（起始位为手指屈曲）')
        self.FuglMeyerMotion_tableWidget.setItem(33, 0, item)
        self.FuglMeyerMotion_tableWidget.setRowHeight(33, 80)
        item = QtWidgets.QTableWidgetItem('不能伸展')
        self.FuglMeyerMotion_tableWidget.setItem(33, 1, item)
        item = QtWidgets.QTableWidgetItem('能放松主动屈曲的手指')
        self.FuglMeyerMotion_tableWidget.setItem(33, 2, item)
        item = QtWidgets.QTableWidgetItem('能完全主动伸展')
        self.FuglMeyerMotion_tableWidget.setItem(33, 3, item)
        item = QtWidgets.QTableWidgetItem('（26）钩状抓握（指令“伸Ⅱ～Ⅴ腕指关节，屈近端和远端指间关节，似拎公文包”）')
        self.FuglMeyerMotion_tableWidget.setItem(34, 0, item)
        self.FuglMeyerMotion_tableWidget.setRowHeight(34, 80)
        item = QtWidgets.QTableWidgetItem('不能保持要求位置')
        self.FuglMeyerMotion_tableWidget.setItem(34, 1, item)
        item = QtWidgets.QTableWidgetItem('握力微弱')
        self.FuglMeyerMotion_tableWidget.setItem(34, 2, item)
        item = QtWidgets.QTableWidgetItem('能够抵抗相当大的阻力')
        self.FuglMeyerMotion_tableWidget.setItem(34, 3, item)
        item = QtWidgets.QTableWidgetItem('（27）侧捏')
        self.FuglMeyerMotion_tableWidget.setItem(35, 0, item)
        self.FuglMeyerMotion_tableWidget.setRowHeight(35, 80)
        item = QtWidgets.QTableWidgetItem('不能进行')
        self.FuglMeyerMotion_tableWidget.setItem(35, 1, item)
        item = QtWidgets.QTableWidgetItem('能用拇指捏住一张纸，但不能抵抗拉力')
        self.FuglMeyerMotion_tableWidget.setItem(35, 2, item)
        item = QtWidgets.QTableWidgetItem('可牢牢捏住纸')
        self.FuglMeyerMotion_tableWidget.setItem(35, 3, item)
        item = QtWidgets.QTableWidgetItem('（28）对捏（拇食指可挟住一根铅笔）')
        self.FuglMeyerMotion_tableWidget.setItem(36, 0, item)
        self.FuglMeyerMotion_tableWidget.setRowHeight(36, 80)
        item = QtWidgets.QTableWidgetItem('完全不能')
        self.FuglMeyerMotion_tableWidget.setItem(36, 1, item)
        item = QtWidgets.QTableWidgetItem('捏力微弱')
        self.FuglMeyerMotion_tableWidget.setItem(36, 2, item)
        item = QtWidgets.QTableWidgetItem('能抵抗相当的阻力')
        self.FuglMeyerMotion_tableWidget.setItem(36, 3, item)
        item = QtWidgets.QTableWidgetItem('（29）圆柱状抓握')
        self.FuglMeyerMotion_tableWidget.setItem(37, 0, item)
        item = QtWidgets.QTableWidgetItem('不能保持要求位置')
        self.FuglMeyerMotion_tableWidget.setItem(37, 1, item)
        item = QtWidgets.QTableWidgetItem('握力微弱')
        self.FuglMeyerMotion_tableWidget.setItem(37, 2, item)
        item = QtWidgets.QTableWidgetItem('能够抵抗相当大的阻力')
        self.FuglMeyerMotion_tableWidget.setItem(37, 3, item)
        item = QtWidgets.QTableWidgetItem('（30）球形抓握')
        self.FuglMeyerMotion_tableWidget.setItem(38, 0, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(38, 1, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(38, 2, item)
        item = QtWidgets.QTableWidgetItem('同上')
        self.FuglMeyerMotion_tableWidget.setItem(38, 3, item)
        item = QtWidgets.QTableWidgetItem('Ⅸ.协调能力和速度（坐位，睁眼，指鼻试验，快速做5次）')
        self.FuglMeyerMotion_tableWidget.setItem(39, 0, item)
        self.FuglMeyerMotion_tableWidget.setSpan(39, 0, 1, 5)
        item = QtWidgets.QTableWidgetItem('（31）震颤')
        self.FuglMeyerMotion_tableWidget.setItem(40, 0, item)
        item = QtWidgets.QTableWidgetItem('明显震颤')
        self.FuglMeyerMotion_tableWidget.setItem(40, 1, item)
        item = QtWidgets.QTableWidgetItem('轻度震颤')
        self.FuglMeyerMotion_tableWidget.setItem(40, 2, item)
        item = QtWidgets.QTableWidgetItem('无震颤')
        self.FuglMeyerMotion_tableWidget.setItem(40, 3, item)
        item = QtWidgets.QTableWidgetItem('（32）辨距障碍')
        self.FuglMeyerMotion_tableWidget.setItem(41, 0, item)
        item = QtWidgets.QTableWidgetItem('明显的或不规则的辨距障碍')
        self.FuglMeyerMotion_tableWidget.setItem(41, 1, item)
        item = QtWidgets.QTableWidgetItem('轻度的或规则的辨距障碍')
        self.FuglMeyerMotion_tableWidget.setItem(41, 2, item)
        item = QtWidgets.QTableWidgetItem('无辨距障碍')
        self.FuglMeyerMotion_tableWidget.setItem(41, 3, item)
        item = QtWidgets.QTableWidgetItem('（33）速度')
        self.FuglMeyerMotion_tableWidget.setItem(42, 0, item)
        item = QtWidgets.QTableWidgetItem('较健侧长6秒')
        self.FuglMeyerMotion_tableWidget.setItem(42, 1, item)
        item = QtWidgets.QTableWidgetItem('较健侧长2～5秒')
        self.FuglMeyerMotion_tableWidget.setItem(42, 2, item)
        item = QtWidgets.QTableWidgetItem('两侧差别<2秒')
        self.FuglMeyerMotion_tableWidget.setItem(42, 3, item)
        self.FuglMeyerMotion_tableWidget.setWordWrap(True)

        self.label_28 = QtWidgets.QLabel(self.page_2)
        self.label_28.setGeometry(QtCore.QRect(30, 840, 200, 40))
        self.label_28.setStyleSheet("font:14pt")

        self.FuglMeyerMotion_totalscore = QtWidgets.QLabel(self.page_2)
        self.FuglMeyerMotion_totalscore.setGeometry(QtCore.QRect(100, 840, 200, 40))
        self.FuglMeyerMotion_totalscore.setStyleSheet("font:14pt")

        self.label_29 = QtWidgets.QLabel(self.page_2)
        self.label_29.setGeometry(QtCore.QRect(200, 840, 200, 40))
        self.label_29.setStyleSheet("font:14pt")

        self.FuglMeyerMotion_wristScore = QtWidgets.QLineEdit(self.page_2)
        self.FuglMeyerMotion_wristScore.setGeometry(QtCore.QRect(340, 840, 200, 40))
        self.FuglMeyerMotion_wristScore.setStyleSheet("font:14pt;background:white")

        self.label_30 = QtWidgets.QLabel(self.page_2)
        self.label_30.setGeometry(QtCore.QRect(560, 840, 200, 40))
        self.label_30.setStyleSheet("font:14pt")

        self.FuglMeyerMotion_handScore = QtWidgets.QLineEdit(self.page_2)
        self.FuglMeyerMotion_handScore.setGeometry(QtCore.QRect(700, 840, 200, 40))
        self.FuglMeyerMotion_handScore.setStyleSheet("font:14pt;background:white")

        self.label_31 = QtWidgets.QLabel(self.page_2)
        self.label_31.setGeometry(QtCore.QRect(30, 900, 200, 40))
        self.label_31.setStyleSheet("font:14pt")

        self.FuglMeyerMotion_date = QtWidgets.QDateEdit(QDate.currentDate(), self.page_2)
        self.FuglMeyerMotion_date.setGeometry(QtCore.QRect(160, 900, 200, 40))
        self.FuglMeyerMotion_date.setStyleSheet("font:14pt;background:white")
        self.FuglMeyerMotion_date.setCalendarPopup(True)

        self.FuglMeyerMotion_saveButton = QtWidgets.QPushButton(self.page_2)
        self.FuglMeyerMotion_saveButton.setGeometry(QtCore.QRect(380, 900, 120, 40))
        self.FuglMeyerMotion_saveButton.setStyleSheet("background-color:rgb(1, 144, 202);font:12pt;color:white")

        self.FuglMeyerMotion_uploadButton = QtWidgets.QPushButton(self.page_2)
        self.FuglMeyerMotion_uploadButton.setGeometry(QtCore.QRect(520, 900, 120, 40))
        self.FuglMeyerMotion_uploadButton.setStyleSheet("background-color:rgb(1, 144, 202);font:12pt;color:white")
        self.stackedWidget.addWidget(self.page_2)

        self.page_3 = QtWidgets.QWidget()
        self.label_32= QtWidgets.QLabel(self.page_3)
        self.label_32.setGeometry(QtCore.QRect(400, 10, 700, 41))
        self.label_32.setAlignment(Qt.AlignCenter)
        self.label_32.setStyleSheet('font:16pt')

        self.label_33 = QtWidgets.QLabel(self.page_3)
        self.label_33.setGeometry(QtCore.QRect(80, 60, 200, 40))
        self.label_33.setStyleSheet('font:14pt')

        self.FuglMSensation_name = QtWidgets.QLabel(self.page_3)
        self.FuglMSensation_name.setGeometry(QtCore.QRect(160, 60, 200, 40))
        self.FuglMSensation_name.setStyleSheet('font:14pt')

        self.label_34 = QtWidgets.QLabel(self.page_3)
        self.label_34.setGeometry(QtCore.QRect(280, 60, 200, 40))
        self.label_34.setStyleSheet('font:14pt')

        self.FuglMSensation_gender = QtWidgets.QLabel(self.page_3)
        self.FuglMSensation_gender.setGeometry(QtCore.QRect(360, 60, 200, 40))
        self.FuglMSensation_gender.setStyleSheet('font:14pt')

        self.label_35 = QtWidgets.QLabel(self.page_3)
        self.label_35.setGeometry(QtCore.QRect(480, 60, 200, 40))
        self.label_35.setStyleSheet('font:14pt')

        self.FuglMSensation_age = QtWidgets.QLabel(self.page_3)
        self.FuglMSensation_age.setGeometry(QtCore.QRect(560, 60, 200, 40))
        self.FuglMSensation_age.setStyleSheet('font:14pt')

        self.label_36 = QtWidgets.QLabel(self.page_3)
        self.label_36.setGeometry(QtCore.QRect(680, 60, 200, 40))
        self.label_36.setStyleSheet('font:14pt')

        self.FuglMSensation_hand = QtWidgets.QLabel(self.page_3)
        self.FuglMSensation_hand.setGeometry(QtCore.QRect(760, 60, 200, 40))
        self.FuglMSensation_hand.setStyleSheet('font:14pt')

        self.FuglMSensation_table = QtWidgets.QTableWidget(self.page_3)
        self.FuglMSensation_table.setGeometry(QtCore.QRect(20, 120, 1460, 580))
        self.FuglMSensation_table.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.FuglMSensation_table.setStyleSheet('background:white;font:14pt')
        self.FuglMSensation_table.setColumnCount(5)
        self.FuglMSensation_table.setRowCount(10)
        self.FuglMSensation_table.verticalHeader().setVisible(False)

        item = QtWidgets.QTableWidgetItem()
        self.FuglMSensation_table.setHorizontalHeaderItem(0, item)  # 列
        self.FuglMSensation_table.setColumnWidth(0, 600)
        item = QtWidgets.QTableWidgetItem()
        self.FuglMSensation_table.setHorizontalHeaderItem(1, item)
        self.FuglMSensation_table.setColumnWidth(1, 220)
        item = QtWidgets.QTableWidgetItem()
        self.FuglMSensation_table.setHorizontalHeaderItem(2, item)
        self.FuglMSensation_table.setColumnWidth(2, 208)
        item = QtWidgets.QTableWidgetItem()
        self.FuglMSensation_table.setHorizontalHeaderItem(3, item)
        self.FuglMSensation_table.setColumnWidth(3, 208)
        item = QtWidgets.QTableWidgetItem()
        self.FuglMSensation_table.setHorizontalHeaderItem(4, item)
        self.FuglMSensation_table.setColumnWidth(4, 218)

        item = QtWidgets.QTableWidgetItem('Ⅰ.轻触觉')
        self.FuglMSensation_table.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem('     评分标准')
        self.FuglMSensation_table.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem('         0分：麻木，无感觉')
        self.FuglMSensation_table.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem('         1分：感觉过敏或感觉减退')
        self.FuglMSensation_table.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem('         2分：正常')
        self.FuglMSensation_table.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem('A 上臂')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.FuglMSensation_table.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem('B 手掌')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.FuglMSensation_table.setItem(1, 1, item)
        self.FuglMSensation_table.setSpan(1, 1, 4, 1)

        item = QtWidgets.QTableWidgetItem('Ⅱ.本体感觉 ')
        self.FuglMSensation_table.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem('     评分标准')
        self.FuglMSensation_table.setItem(6, 0, item)
        item = QtWidgets.QTableWidgetItem('         0分：无感觉')
        self.FuglMSensation_table.setItem(7, 0, item)
        item = QtWidgets.QTableWidgetItem('         1分：4次问答中有3次是正确的，但与健侧比仍有相当的差别')
        self.FuglMSensation_table.setItem(8, 0, item)
        self.FuglMSensation_table.setRowHeight(8, 100)
        item = QtWidgets.QTableWidgetItem('         2分：所有问答正确，两侧无差别')
        self.FuglMSensation_table.setItem(9, 0, item)
        item = QtWidgets.QTableWidgetItem('A 肩部')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.FuglMSensation_table.setItem(5, 1, item)
        item = QtWidgets.QTableWidgetItem('B   肘')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.FuglMSensation_table.setItem(6, 1, item)
        item = QtWidgets.QTableWidgetItem('C   腕')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.FuglMSensation_table.setItem(7, 1, item)
        item = QtWidgets.QTableWidgetItem('D 拇指')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.FuglMSensation_table.setItem(8, 1, item)
        self.FuglMSensation_table.setSpan(8, 1, 2, 1)

        self.label_37 = QtWidgets.QLabel(self.page_3)
        self.label_37.setGeometry(QtCore.QRect(30, 740, 200, 40))
        self.label_37.setStyleSheet('font:14pt')

        self.FuglMSensation_dateEdit = QtWidgets.QDateEdit(QDate.currentDate(), self.page_3)
        self.FuglMSensation_dateEdit.setGeometry(QtCore.QRect(170, 740, 260, 40))
        self.FuglMSensation_dateEdit.setStyleSheet("font:16pt;background:white")
        self.FuglMSensation_dateEdit.setCalendarPopup(True)

        self.FuglMSensation_saveButton = QtWidgets.QPushButton(self.page_3)
        self.FuglMSensation_saveButton.setGeometry(QtCore.QRect(450, 740, 120, 40))
        self.FuglMSensation_saveButton.setStyleSheet("background-color:rgb(1, 144, 202);font:12pt;color:white")

        self.FuglMSensation_downLoadButton = QtWidgets.QPushButton(self.page_3)
        self.FuglMSensation_downLoadButton.setGeometry(QtCore.QRect(590, 740, 120, 40))
        self.FuglMSensation_downLoadButton.setStyleSheet("background-color:rgb(1, 144, 202);font:12pt;color:white")
        self.stackedWidget.addWidget(self.page_3)

        self.page_4 = QtWidgets.QWidget()
        self.label_38 = QtWidgets.QLabel(self.page_4)
        self.label_38.setGeometry(QtCore.QRect(500, 10, 400, 41))
        self.label_38.setAlignment(Qt.AlignCenter)
        self.label_38.setStyleSheet('font:16pt')

        self.label_39 = QtWidgets.QLabel(self.page_4)
        self.label_39.setGeometry(QtCore.QRect(80, 60, 200, 40))
        self.label_39.setStyleSheet('font:14pt')

        self.handFunctionMotion_name = QtWidgets.QLabel(self.page_4)
        self.handFunctionMotion_name.setGeometry(QtCore.QRect(160, 60, 200, 40))
        self.handFunctionMotion_name.setStyleSheet('font:14pt')

        self.label_40 = QtWidgets.QLabel(self.page_4)
        self.label_40.setGeometry(QtCore.QRect(280, 60, 200, 40))
        self.label_40.setStyleSheet('font:14pt')

        self.handFunctionMotion_gender = QtWidgets.QLabel(self.page_4)
        self.handFunctionMotion_gender.setGeometry(QtCore.QRect(360, 60, 200, 40))
        self.handFunctionMotion_gender.setStyleSheet('font:14pt')

        self.label_41 = QtWidgets.QLabel(self.page_4)
        self.label_41.setGeometry(QtCore.QRect(480, 60, 200, 40))
        self.label_41.setStyleSheet('font:14pt')

        self.handFunctionMotion_age = QtWidgets.QLabel(self.page_4)
        self.handFunctionMotion_age.setGeometry(QtCore.QRect(560, 60, 200, 40))
        self.handFunctionMotion_age.setStyleSheet('font:14pt')

        self.label_42 = QtWidgets.QLabel(self.page_4)
        self.label_42.setGeometry(QtCore.QRect(680, 60, 200, 40))
        self.label_42.setStyleSheet('font:14pt')

        self.handFunctionMotion_hand = QtWidgets.QLabel(self.page_4)
        self.handFunctionMotion_hand.setGeometry(QtCore.QRect(760, 60, 200, 40))
        self.handFunctionMotion_hand.setStyleSheet('font:14pt')

        self.handFunctionMotion_table = QtWidgets.QTableWidget(self.page_4)
        self.handFunctionMotion_table.setGeometry(QtCore.QRect(20, 120, 1460, 700))
        self.handFunctionMotion_table.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.handFunctionMotion_table.setStyleSheet('background:white;font:14pt')
        self.handFunctionMotion_table.setColumnCount(3)
        self.handFunctionMotion_table.setRowCount(4)
        self.handFunctionMotion_table.verticalHeader().setVisible(False)

        item = QtWidgets.QTableWidgetItem()
        self.handFunctionMotion_table.setHorizontalHeaderItem(0, item)  # 列
        self.handFunctionMotion_table.setColumnWidth(0, 120)
        self.handFunctionMotion_table.setRowHeight(0, 160)
        item = QtWidgets.QTableWidgetItem()
        self.handFunctionMotion_table.setHorizontalHeaderItem(1, item)
        self.handFunctionMotion_table.setColumnWidth(1, 720)
        self.handFunctionMotion_table.setRowHeight(1, 160)
        item = QtWidgets.QTableWidgetItem()
        self.handFunctionMotion_table.setHorizontalHeaderItem(2, item)
        self.handFunctionMotion_table.setRowHeight(2, 160)
        self.handFunctionMotion_table.setColumnWidth(2, 608)
        self.handFunctionMotion_table.setRowHeight(3, 160)

        item = QtWidgets.QTableWidgetItem('0')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.handFunctionMotion_table.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem('不能完成抓握动作')
        self.handFunctionMotion_table.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        item.setCheckState(Qt.Unchecked)
        self.handFunctionMotion_table.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem('1')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.handFunctionMotion_table.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem('能完成抓握动作，但不能抗轻微阻力')
        self.handFunctionMotion_table.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        item.setCheckState(Qt.Unchecked)
        self.handFunctionMotion_table.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem('2')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.handFunctionMotion_table.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem('能握住1个物体达5秒钟，但不能抗中等阻力，或抓握不协调，不标准')
        self.handFunctionMotion_table.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        item.setCheckState(Qt.Unchecked)
        self.handFunctionMotion_table.setItem(2, 2, item)
        item = QtWidgets.QTableWidgetItem('3')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.handFunctionMotion_table.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem('抓握正常。能握住1个物体抗较大阻力5秒钟，并能像正常人一样松开手')
        self.handFunctionMotion_table.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        item.setCheckState(Qt.Unchecked)
        self.handFunctionMotion_table.setItem(3, 2, item)

        self.label_43 = QtWidgets.QLabel(self.page_4)
        self.label_43.setGeometry(QtCore.QRect(20, 860, 260, 40))
        self.label_43.setStyleSheet("font:16pt")

        self.handFunctionMotion_dateEdit = QtWidgets.QDateEdit(QDate.currentDate(), self.page_4)
        self.handFunctionMotion_dateEdit.setGeometry(QtCore.QRect(170, 860, 260, 40))
        self.handFunctionMotion_dateEdit.setStyleSheet("font:16pt;background:white")
        self.handFunctionMotion_dateEdit.setCalendarPopup(True)

        self.handFunctionMotion_saveButton = QtWidgets.QPushButton(self.page_4)
        self.handFunctionMotion_saveButton.setGeometry(QtCore.QRect(450, 860, 120, 40))
        self.handFunctionMotion_saveButton.setStyleSheet("background-color:rgb(1, 144, 202);font:12pt;color:white")

        self.handFunctionMotion_downLoadButton = QtWidgets.QPushButton(self.page_4)
        self.handFunctionMotion_downLoadButton.setGeometry(QtCore.QRect(590, 860, 120, 40))
        self.handFunctionMotion_downLoadButton.setStyleSheet("background-color:rgb(1, 144, 202);font:12pt;color:white")

        self.stackedWidget.addWidget(self.page_4)

        self.page_5 = QtWidgets.QWidget()

        self.label_44= QtWidgets.QLabel(self.page_5)
        self.label_44.setGeometry(QtCore.QRect(500, 10, 400, 41))
        self.label_44.setAlignment(Qt.AlignCenter)
        self.label_44.setStyleSheet('font:16pt')

        self.label_45 = QtWidgets.QLabel(self.page_5)
        self.label_45.setGeometry(QtCore.QRect(80, 60, 200, 40))
        self.label_45.setStyleSheet('font:14pt')

        self.BBT_name = QtWidgets.QLabel(self.page_5)
        self.BBT_name.setGeometry(QtCore.QRect(160, 60, 200, 40))
        self.BBT_name.setStyleSheet('font:14pt')

        self.label_46 = QtWidgets.QLabel(self.page_5)
        self.label_46.setGeometry(QtCore.QRect(280, 60, 200, 40))
        self.label_46.setStyleSheet('font:14pt')

        self.BBT_gender = QtWidgets.QLabel(self.page_5)
        self.BBT_gender.setGeometry(QtCore.QRect(360, 60, 200, 40))
        self.BBT_gender.setStyleSheet('font:14pt')

        self.label_47 = QtWidgets.QLabel(self.page_5)
        self.label_47.setGeometry(QtCore.QRect(480, 60, 200, 40))
        self.label_47.setStyleSheet('font:14pt')

        self.BBT_age = QtWidgets.QLabel(self.page_5)
        self.BBT_age.setGeometry(QtCore.QRect(560, 60, 200, 40))
        self.BBT_age.setStyleSheet('font:14pt')

        self.label_48 = QtWidgets.QLabel(self.page_5)
        self.label_48.setGeometry(QtCore.QRect(680, 60, 200, 40))
        self.label_48.setStyleSheet('font:14pt')

        self.BBT_hand = QtWidgets.QLabel(self.page_5)
        self.BBT_hand.setGeometry(QtCore.QRect(760, 60, 200, 40))
        self.BBT_hand.setStyleSheet('font:14pt')

        self.BBT_table = QtWidgets.QTableWidget(self.page_5)
        self.BBT_table.setGeometry(QtCore.QRect(20, 120, 1460,410))
        self.BBT_table.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.BBT_table.setStyleSheet('background:white;font:14pt')
        self.BBT_table.setColumnCount(6)
        self.BBT_table.setRowCount(5)
        self.BBT_table.verticalHeader().setVisible(False)
        self.BBT_table.horizontalHeader().setVisible(False)

        item = QtWidgets.QTableWidgetItem()
        self.BBT_table.setHorizontalHeaderItem(0, item)  # 列
        self.BBT_table.setColumnWidth(0, 243)
        item = QtWidgets.QTableWidgetItem()
        self.BBT_table.setHorizontalHeaderItem(1, item)  # 列
        self.BBT_table.setColumnWidth(1, 270)
        item = QtWidgets.QTableWidgetItem()
        self.BBT_table.setHorizontalHeaderItem(2, item)
        self.BBT_table.setColumnWidth(2, 260)
        item = QtWidgets.QTableWidgetItem()
        self.BBT_table.setHorizontalHeaderItem(3, item)
        self.BBT_table.setColumnWidth(3, 260)
        item = QtWidgets.QTableWidgetItem()
        self.BBT_table.setHorizontalHeaderItem(4, item)
        self.BBT_table.setColumnWidth(4, 270)


        item = QtWidgets.QTableWidgetItem('盒子与积木测验表（BBT）')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.BBT_table.setItem(0, 0, item)
        self.BBT_table.setSpan(0,0,1,6)
        self.BBT_table.setRowHeight(0,80)

        item = QtWidgets.QTableWidgetItem('姓名：')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.BBT_table.setItem(1, 0, item)
        self.BBT_table.setSpan(1, 0, 1, 3)
        self.BBT_table.setRowHeight(1, 80)
        self.BBT_table.setSpan(1, 3, 1, 3)

        self.BBT_handComBox1=QtWidgets.QComboBox(self.page_5)
        self.BBT_handComBox1.addItems(['','左','右'])
        self.BBT_handComBox1.setStyleSheet('font:14pt')

        item = QtWidgets.QTableWidgetItem('利手（优势手）：')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.BBT_table.setItem(2, 0, item)
        self.BBT_table.setSpan(2,0,1,2)
        self.BBT_table.setRowHeight(2, 80)
        self.BBT_table.setCellWidget(2,2,self.BBT_handComBox1)

        self.BBT_handComBox2 = QtWidgets.QComboBox(self.page_5)
        self.BBT_handComBox2.addItems(['', '左', '右'])
        self.BBT_handComBox2.setStyleSheet('font:14pt')

        item = QtWidgets.QTableWidgetItem('健侧手：')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.BBT_table.setItem(2,3, item)
        self.BBT_table.setSpan(2, 3, 1, 2)
        self.BBT_table.setCellWidget(2, 5, self.BBT_handComBox2)

        item = QtWidgets.QTableWidgetItem('一分钟内转移的木块数量：')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.BBT_table.setItem(3, 0, item)
        self.BBT_table.setRowHeight(3, 80)
        self.BBT_table.setSpan(3,0, 1, 3)
        self.BBT_table.setSpan(3, 3, 1, 3)

        self.BBT_dateEdit = QtWidgets.QDateEdit(QDate.currentDate(), self.page_5)
        self.BBT_dateEdit.setStyleSheet("font:16pt;background:white")
        self.BBT_dateEdit.setCalendarPopup(True)

        item = QtWidgets.QTableWidgetItem('日期：')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.BBT_table.setItem(4, 0, item)
        self.BBT_table.setRowHeight(4, 80)
        self.BBT_table.setCellWidget(4,1, self.BBT_dateEdit)

        self.BBT_handComBox3 = QtWidgets.QComboBox(self.page_5)
        self.BBT_handComBox3.addItems(['', '左', '右'])
        self.BBT_handComBox3.setStyleSheet('font:14pt')

        item = QtWidgets.QTableWidgetItem('健侧手：')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.BBT_table.setItem(4,2, item)
        self.BBT_table.setCellWidget(4, 3, self.BBT_handComBox3)

        self.BBT_handComBox4 = QtWidgets.QComboBox(self.page_5)
        self.BBT_handComBox4.addItems(['', '左', '右'])
        self.BBT_handComBox4.setStyleSheet('font:14pt')

        item = QtWidgets.QTableWidgetItem('患侧手：')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.BBT_table.setItem(4, 4, item)
        self.BBT_table.setCellWidget(4, 5, self.BBT_handComBox4)

        self.BBT_saveButton = QtWidgets.QPushButton(self.page_5)
        self.BBT_saveButton.setGeometry(QtCore.QRect(450, 600, 150, 40))
        self.BBT_saveButton.setStyleSheet("background-color:rgb(1, 144, 202);font:12pt;color:white")

        self.BBT_downLoadButton = QtWidgets.QPushButton(self.page_5)
        self.BBT_downLoadButton.setGeometry(QtCore.QRect(630, 600, 150, 40))
        self.BBT_downLoadButton.setStyleSheet("background-color:rgb(1, 144, 202);font:12pt;color:white")
        self.stackedWidget.addWidget(self.page_5)

        self.page_6 = QtWidgets.QWidget()
        self.label_49 = QtWidgets.QLabel(self.page_6)
        self.label_49.setGeometry(QtCore.QRect(400, 10, 800, 41))
        self.label_49.setAlignment(Qt.AlignCenter)
        self.label_49.setStyleSheet('font:16pt')

        self.label_50 = QtWidgets.QLabel(self.page_6)
        self.label_50.setGeometry(QtCore.QRect(80, 60, 200, 40))
        self.label_50.setStyleSheet('font:14pt')

        self.NineHolePegTest_name = QtWidgets.QLabel(self.page_6)
        self.NineHolePegTest_name.setGeometry(QtCore.QRect(160, 60, 200, 40))
        self.NineHolePegTest_name.setStyleSheet('font:14pt')

        self.label_51 = QtWidgets.QLabel(self.page_6)
        self.label_51.setGeometry(QtCore.QRect(280, 60, 200, 40))
        self.label_51.setStyleSheet('font:14pt')

        self.NineHolePegTest_gender = QtWidgets.QLabel(self.page_6)
        self.NineHolePegTest_gender.setGeometry(QtCore.QRect(360, 60, 200, 40))
        self.NineHolePegTest_gender.setStyleSheet('font:14pt')

        self.label_52 = QtWidgets.QLabel(self.page_6)
        self.label_52.setGeometry(QtCore.QRect(480, 60, 200, 40))
        self.label_52.setStyleSheet('font:14pt')

        self.NineHolePegTest_age = QtWidgets.QLabel(self.page_6)
        self.NineHolePegTest_age.setGeometry(QtCore.QRect(560, 60, 200, 40))
        self.NineHolePegTest_age.setStyleSheet('font:14pt')

        self.label_53 = QtWidgets.QLabel(self.page_6)
        self.label_53.setGeometry(QtCore.QRect(680, 60, 200, 40))
        self.label_53.setStyleSheet('font:14pt')

        self.NineHolePegTest_hand = QtWidgets.QLabel(self.page_6)
        self.NineHolePegTest_hand.setGeometry(QtCore.QRect(760, 60, 200, 40))
        self.NineHolePegTest_hand.setStyleSheet('font:14pt')

        self.NineHolePegTest_table = QtWidgets.QTableWidget(self.page_6)
        self.NineHolePegTest_table.setGeometry(QtCore.QRect(20, 120, 1460, 410))
        self.NineHolePegTest_table.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.NineHolePegTest_table.setStyleSheet('background:white;font:14pt')
        self.NineHolePegTest_table.setColumnCount(6)
        self.NineHolePegTest_table.setRowCount(5)
        self.NineHolePegTest_table.verticalHeader().setVisible(False)
        self.NineHolePegTest_table.horizontalHeader().setVisible(False)

        item = QtWidgets.QTableWidgetItem()
        self.NineHolePegTest_table.setHorizontalHeaderItem(0, item)  # 列
        self.NineHolePegTest_table.setColumnWidth(0, 243)
        item = QtWidgets.QTableWidgetItem()
        self.NineHolePegTest_table.setHorizontalHeaderItem(1, item)  # 列
        self.NineHolePegTest_table.setColumnWidth(1, 270)
        item = QtWidgets.QTableWidgetItem()
        self.NineHolePegTest_table.setHorizontalHeaderItem(2, item)
        self.NineHolePegTest_table.setColumnWidth(2, 260)
        item = QtWidgets.QTableWidgetItem()
        self.NineHolePegTest_table.setHorizontalHeaderItem(3, item)
        self.NineHolePegTest_table.setColumnWidth(3, 260)
        item = QtWidgets.QTableWidgetItem()
        self.NineHolePegTest_table.setHorizontalHeaderItem(4, item)
        self.NineHolePegTest_table.setColumnWidth(4, 270)

        item = QtWidgets.QTableWidgetItem('九孔柱测试（Nine Hole Peg Test）')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.NineHolePegTest_table.setItem(0, 0, item)
        self.NineHolePegTest_table.setSpan(0, 0, 1, 6)
        self.NineHolePegTest_table.setRowHeight(0, 80)

        item = QtWidgets.QTableWidgetItem('姓名：')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.NineHolePegTest_table.setItem(1, 0, item)
        self.NineHolePegTest_table.setSpan(1, 0, 1, 3)
        self.NineHolePegTest_table.setRowHeight(1, 80)
        self.NineHolePegTest_table.setSpan(1, 3, 1, 3)

        self.NineHolePegTest_handComBox1 = QtWidgets.QComboBox(self.page_6)
        self.NineHolePegTest_handComBox1.addItems(['', '左', '右'])
        self.NineHolePegTest_handComBox1.setStyleSheet('font:14pt')

        item = QtWidgets.QTableWidgetItem('利手（优势手）：')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.NineHolePegTest_table.setItem(2, 0, item)
        self.NineHolePegTest_table.setSpan(2, 0, 1, 2)
        self.NineHolePegTest_table.setRowHeight(2, 80)
        self.NineHolePegTest_table.setCellWidget(2, 2, self.NineHolePegTest_handComBox1)

        self.NineHolePegTest_handComBox2 = QtWidgets.QComboBox(self.page_6)
        self.NineHolePegTest_handComBox2.addItems(['', '左', '右'])
        self.NineHolePegTest_handComBox2.setStyleSheet('font:14pt')

        item = QtWidgets.QTableWidgetItem('健侧手：')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.NineHolePegTest_table.setItem(2, 3, item)
        self.NineHolePegTest_table.setSpan(2, 3, 1, 2)
        self.NineHolePegTest_table.setCellWidget(2, 5, self.NineHolePegTest_handComBox2)

        item = QtWidgets.QTableWidgetItem('在几秒钟内完成测试：')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.NineHolePegTest_table.setItem(3, 0, item)
        self.NineHolePegTest_table.setRowHeight(3, 80)
        self.NineHolePegTest_table.setSpan(3, 0, 1, 3)
        self.NineHolePegTest_table.setSpan(3, 3, 1, 3)

        self.NineHolePegTest_dateEdit = QtWidgets.QDateEdit(QDate.currentDate(), self.page_6)
        self.NineHolePegTest_dateEdit.setStyleSheet("font:16pt;background:white")
        self.NineHolePegTest_dateEdit.setCalendarPopup(True)

        item = QtWidgets.QTableWidgetItem('日期：')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.NineHolePegTest_table.setItem(4, 0, item)
        self.NineHolePegTest_table.setRowHeight(4, 80)
        self.NineHolePegTest_table.setCellWidget(4, 1, self.NineHolePegTest_dateEdit)

        self.NineHolePegTest_handComBox3 = QtWidgets.QComboBox(self.page_6)
        self.NineHolePegTest_handComBox3.addItems(['', '左', '右'])
        self.NineHolePegTest_handComBox3.setStyleSheet('font:14pt')

        item = QtWidgets.QTableWidgetItem('健侧手：')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.NineHolePegTest_table.setItem(4, 2, item)
        self.NineHolePegTest_table.setCellWidget(4, 3, self.NineHolePegTest_handComBox3)

        self.NineHolePegTest_handComBox4 = QtWidgets.QComboBox(self.page_6)
        self.NineHolePegTest_handComBox4.addItems(['', '左', '右'])
        self.NineHolePegTest_handComBox4.setStyleSheet('font:14pt')

        item = QtWidgets.QTableWidgetItem('患侧手：')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.NineHolePegTest_table.setItem(4, 4, item)
        self.NineHolePegTest_table.setCellWidget(4, 5, self.NineHolePegTest_handComBox4)

        self.NineHolePegTest_saveButton = QtWidgets.QPushButton(self.page_6)
        self.NineHolePegTest_saveButton.setGeometry(QtCore.QRect(450, 600, 150, 40))
        self.NineHolePegTest_saveButton.setStyleSheet("background-color:rgb(1, 144, 202);font:12pt;color:white")

        self.NineHolePegTest_downLoadButton = QtWidgets.QPushButton(self.page_6)
        self.NineHolePegTest_downLoadButton.setGeometry(QtCore.QRect(630, 600, 150, 40))
        self.NineHolePegTest_downLoadButton.setStyleSheet("background-color:rgb(1, 144, 202);font:12pt;color:white")
        self.stackedWidget.addWidget(self.page_6)

        self.page_7 = QtWidgets.QWidget()
        self.label_54 = QtWidgets.QLabel(self.page_7)
        self.label_54.setGeometry(QtCore.QRect(500, 10, 400, 41))
        self.label_54.setAlignment(Qt.AlignCenter)
        self.label_54.setStyleSheet('font:16pt')

        self.label_55 = QtWidgets.QLabel(self.page_7)
        self.label_55.setGeometry(QtCore.QRect(80, 60, 200, 40))
        self.label_55.setStyleSheet('font:14pt')

        self.ARAT_name = QtWidgets.QLabel(self.page_7)
        self.ARAT_name.setGeometry(QtCore.QRect(160, 60, 200, 40))
        self.ARAT_name.setStyleSheet('font:14pt')

        self.label_56 = QtWidgets.QLabel(self.page_7)
        self.label_56.setGeometry(QtCore.QRect(280, 60, 200, 40))
        self.label_56.setStyleSheet('font:14pt')

        self.ARAT_gender = QtWidgets.QLabel(self.page_7)
        self.ARAT_gender.setGeometry(QtCore.QRect(360, 60, 200, 40))
        self.ARAT_gender.setStyleSheet('font:14pt')

        self.label_57 = QtWidgets.QLabel(self.page_7)
        self.label_57.setGeometry(QtCore.QRect(480, 60, 200, 40))
        self.label_57.setStyleSheet('font:14pt')

        self.ARAT_age = QtWidgets.QLabel(self.page_7)
        self.ARAT_age.setGeometry(QtCore.QRect(560, 60, 200, 40))
        self.ARAT_age.setStyleSheet('font:14pt')

        self.label_58 = QtWidgets.QLabel(self.page_7)
        self.label_58.setGeometry(QtCore.QRect(680, 60, 200, 40))
        self.label_58.setStyleSheet('font:14pt')

        self.ARAT_hand = QtWidgets.QLabel(self.page_7)
        self.ARAT_hand.setGeometry(QtCore.QRect(760, 60, 200, 40))
        self.ARAT_hand.setStyleSheet('font:14pt')

        self.ARAT_table = QtWidgets.QTableWidget(self.page_7)
        self.ARAT_table.setGeometry(QtCore.QRect(20, 120, 1460, 700))
        self.ARAT_table.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.ARAT_table.setStyleSheet('background:white;font:12pt')
        self.ARAT_table.setColumnCount(5)
        self.ARAT_table.setRowCount(20)
        self.ARAT_table.verticalHeader().setVisible(False)

        item = QtWidgets.QTableWidgetItem()
        self.ARAT_table.setHorizontalHeaderItem(0, item)  # 列
        self.ARAT_table.setColumnWidth(0, 120)
        item = QtWidgets.QTableWidgetItem()
        self.ARAT_table.setHorizontalHeaderItem(1, item)
        self.ARAT_table.setColumnWidth(1, 680)
        item = QtWidgets.QTableWidgetItem()
        self.ARAT_table.setHorizontalHeaderItem(2, item)
        self.ARAT_table.setColumnWidth(2, 208)
        item = QtWidgets.QTableWidgetItem()
        self.ARAT_table.setHorizontalHeaderItem(3, item)
        self.ARAT_table.setColumnWidth(3, 208)
        item = QtWidgets.QTableWidgetItem()
        self.ARAT_table.setHorizontalHeaderItem(4, item)
        self.ARAT_table.setColumnWidth(4, 208)

        item = QtWidgets.QTableWidgetItem('抓')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.ARAT_table.setItem(0, 0, item)
        self.ARAT_table.setRowHeight(0, 80)
        self.ARAT_table.setSpan(0, 0, 6, 1)
        item = QtWidgets.QTableWidgetItem('1．抓一边长10 cm的正方体木块（如果得分=3，则该部分总分=18，并直接做“握”部分）')
        self.ARAT_table.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem('2．抓一边长2.5 cm的正方体木块 （如果得分=0，则该部分总分=0，并直接做“握”部分）')
        self.ARAT_table.setRowHeight(1, 80)
        self.ARAT_table.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem('3．抓一边长5 cm的正方体木块')
        self.ARAT_table.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem('4．抓一边长7.5 cm的正方体木块')
        self.ARAT_table.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem('5．抓一直径7.5 cm的球')
        self.ARAT_table.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem('6．抓一直径10 × 2.5 × 1 cm的石头 ')
        self.ARAT_table.setItem(5, 1, item)
        item = QtWidgets.QTableWidgetItem('握')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.ARAT_table.setItem(6, 0, item)
        self.ARAT_table.setSpan(6, 0, 4, 1)
        item = QtWidgets.QTableWidgetItem('1．把一玻璃杯的水倒入另一玻璃杯里（如果得分=3，则该部分总分=12，并直接做“捏”部分） ')
        self.ARAT_table.setItem(6, 1, item)
        self.ARAT_table.setRowHeight(6, 80)
        item = QtWidgets.QTableWidgetItem('2．2.25 cm的管子（如果得分=0，则该部分总分=0，并直接做“捏”部分） ')
        self.ARAT_table.setItem(7, 1, item)
        self.ARAT_table.setRowHeight(7, 80)
        item = QtWidgets.QTableWidgetItem('3．1 x 16 cm的管子 ')
        self.ARAT_table.setItem(8, 1, item)
        item = QtWidgets.QTableWidgetItem('4．把直径3.5cm的螺帽放在螺钉上 ')
        self.ARAT_table.setItem(9, 1, item)
        item = QtWidgets.QTableWidgetItem('捏')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.ARAT_table.setItem(10, 0, item)
        self.ARAT_table.setSpan(10, 0, 6, 1)
        item = QtWidgets.QTableWidgetItem('1．用无名指和拇指相对捏起直径6 mm的小球（如果得分=3，则该部分总分=18，并直接做“粗大运动”部分）')
        self.ARAT_table.setItem(10, 1, item)
        self.ARAT_table.setRowHeight(10, 80)
        item = QtWidgets.QTableWidgetItem('2．用食指和拇指捏起直径1.5 cm的弹子（如果得分=0，则该部分总分=0，并直接做“粗大运动”部分）')
        self.ARAT_table.setRowHeight(11, 80)
        self.ARAT_table.setItem(11, 1, item)
        item = QtWidgets.QTableWidgetItem('3．用中指和拇指相对捏起直径6 mm的小球')
        self.ARAT_table.setItem(12, 1, item)
        item = QtWidgets.QTableWidgetItem('4．用食指和拇指相对捏起直径6 mm的小球')
        self.ARAT_table.setItem(13, 1, item)
        item = QtWidgets.QTableWidgetItem('5．用中指和拇指捏起直径1.5 cm的弹子')
        self.ARAT_table.setItem(14, 1, item)
        item = QtWidgets.QTableWidgetItem('6．用无名指和拇指捏起直径1.5 cm的弹子')
        self.ARAT_table.setItem(15, 1, item)
        item = QtWidgets.QTableWidgetItem('粗大运动')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.ARAT_table.setItem(16, 0, item)
        self.ARAT_table.setRowHeight(0, 80)
        self.ARAT_table.setSpan(16, 0, 3, 1)
        item = QtWidgets.QTableWidgetItem('1．把手置于脑后（如果得分=3，则该部分总分=9; 如果得分=0，则该部分总分=0，并结束')
        self.ARAT_table.setItem(16, 1, item)
        item = QtWidgets.QTableWidgetItem('2．把手放在头')
        self.ARAT_table.setItem(17, 1, item)
        item = QtWidgets.QTableWidgetItem('3．手碰嘴')
        self.ARAT_table.setItem(18, 1, item)
        item = QtWidgets.QTableWidgetItem('总分:')
        self.ARAT_table.setItem(19, 0, item)
        self.ARAT_table.setSpan(19, 0, 1, 2)
        self.ARAT_table.setColumnWidth(0, 80)
        self.ARAT_table.setWordWrap(True)

        self.label_59 = QtWidgets.QLabel(self.page_7)
        self.label_59.setGeometry(QtCore.QRect(20, 830, 1460, 100))
        self.label_59.setStyleSheet("font:12pt")
        self.label_59.setWordWrap(True)

        self.label_60 = QtWidgets.QLabel(self.page_7)
        self.label_60.setGeometry(QtCore.QRect(20, 940, 260, 40))
        self.label_60.setStyleSheet("font:16pt")

        self.ARAT_dateEdit = QtWidgets.QDateEdit(QDate.currentDate(), self.page_7)
        self.ARAT_dateEdit.setGeometry(QtCore.QRect(170, 940, 260, 40))
        self.ARAT_dateEdit.setStyleSheet("font:16pt;background:white")
        self.ARAT_dateEdit.setCalendarPopup(True)

        self.ARAT_saveButton = QtWidgets.QPushButton(self.page_7)
        self.ARAT_saveButton.setGeometry(QtCore.QRect(450, 940, 120, 40))
        self.ARAT_saveButton.setStyleSheet("background-color:rgb(1, 144, 202);font:12pt;color:white")

        self.ARAT_downLoadButton = QtWidgets.QPushButton(self.page_7)
        self.ARAT_downLoadButton.setGeometry(QtCore.QRect(590, 940, 120, 40))
        self.ARAT_downLoadButton.setStyleSheet("background-color:rgb(1, 144, 202);font:12pt;color:white")
        self.stackedWidget.addWidget(self.page_7)

        self.page_8 = QtWidgets.QWidget()
        self.label_61 = QtWidgets.QLabel(self.page_8)
        self.label_61.setGeometry(QtCore.QRect(450, 10, 600, 41))
        self.label_61.setAlignment(Qt.AlignCenter)
        self.label_61.setStyleSheet('font:16pt')

        self.label_62 = QtWidgets.QLabel(self.page_8)
        self.label_62.setGeometry(QtCore.QRect(80, 60, 200, 40))
        self.label_62.setStyleSheet('font:14pt')

        self.WOLF_name = QtWidgets.QLabel(self.page_8)
        self.WOLF_name.setGeometry(QtCore.QRect(160, 60, 200, 40))
        self.WOLF_name.setStyleSheet('font:14pt')

        self.label_63 = QtWidgets.QLabel(self.page_8)
        self.label_63.setGeometry(QtCore.QRect(280, 60, 200, 40))
        self.label_63.setStyleSheet('font:14pt')

        self.WOLF_gender = QtWidgets.QLabel(self.page_8)
        self.WOLF_gender.setGeometry(QtCore.QRect(360, 60, 200, 40))
        self.WOLF_gender.setStyleSheet('font:14pt')

        self.label_64 = QtWidgets.QLabel(self.page_8)
        self.label_64.setGeometry(QtCore.QRect(480, 60, 200, 40))
        self.label_64.setStyleSheet('font:14pt')

        self.WOLF_age = QtWidgets.QLabel(self.page_8)
        self.WOLF_age.setGeometry(QtCore.QRect(560, 60, 200, 40))
        self.WOLF_age.setStyleSheet('font:14pt')

        self.label_65 = QtWidgets.QLabel(self.page_8)
        self.label_65.setGeometry(QtCore.QRect(680, 60, 200, 40))
        self.label_65.setStyleSheet('font:14pt')

        self.WOLF_hand = QtWidgets.QLabel(self.page_8)
        self.WOLF_hand.setGeometry(QtCore.QRect(760, 60, 200, 40))
        self.WOLF_hand.setStyleSheet('font:14pt')

        self.WOLF_table = QtWidgets.QTableWidget(self.page_8)
        self.WOLF_table.setGeometry(QtCore.QRect(20, 120, 1460, 430))
        self.WOLF_table.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.WOLF_table.setStyleSheet('background:white;font:14pt')
        self.WOLF_table.setColumnCount(2)
        self.WOLF_table.setRowCount(18)
        self.WOLF_table.verticalHeader().setVisible(False)
        self.WOLF_table.horizontalHeader().setVisible(False)

        item = QtWidgets.QTableWidgetItem()
        self.WOLF_table.setHorizontalHeaderItem(0, item)  # 列
        self.WOLF_table.setColumnWidth(0, 740)
        item = QtWidgets.QTableWidgetItem()
        self.WOLF_table.setHorizontalHeaderItem(1, item)
        self.WOLF_table.setColumnWidth(1, 680)

        item = QtWidgets.QTableWidgetItem('项目内容')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.WOLF_table.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem('评分')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.WOLF_table.setItem(0, 1, item)

        item = QtWidgets.QTableWidgetItem('前臂放到桌子(侧面)')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.WOLF_table.setItem(1, 0, item)

        item = QtWidgets.QTableWidgetItem('前臂由桌子放到盒子f侧面)')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.WOLF_table.setItem(2, 0, item)

        item = QtWidgets.QTableWidgetItem('前臂放到桌子(侧面)')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.WOLF_table.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem('在桌面上伸肘(侧面)')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.WOLF_table.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem('在桌面有负荷伸尉(侧面)')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.WOLF_table.setItem(5, 0, item)
        item = QtWidgets.QTableWidgetItem('手放到桌子(正面)')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.WOLF_table.setItem(6, 0, item)
        item = QtWidgets.QTableWidgetItem('手由桌子放到盒子(正面)')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.WOLF_table.setItem(7, 0, item)
        item = QtWidgets.QTableWidgetItem('在桌面屈肘拉回O.45kg的物体')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.WOLF_table.setItem(8, 0, item)
        item = QtWidgets.QTableWidgetItem('拿起易拉罐到嘴边')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.WOLF_table.setItem(9, 0, item)
        item = QtWidgets.QTableWidgetItem('从桌面上拿起铅笔')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.WOLF_table.setItem(10, 0, item)
        item = QtWidgets.QTableWidgetItem('从桌面拿起曲别针')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.WOLF_table.setItem(11, 0, item)
        item = QtWidgets.QTableWidgetItem('叠放3个棋子')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.WOLF_table.setItem(12, 0, item)
        item = QtWidgets.QTableWidgetItem('翻转3张纸牌')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.WOLF_table.setItem(13, 0, item)
        item = QtWidgets.QTableWidgetItem('在锁中转动钥匙')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.WOLF_table.setItem(14, 0, item)
        item = QtWidgets.QTableWidgetItem('叠毛巾')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.WOLF_table.setItem(15, 0, item)
        item = QtWidgets.QTableWidgetItem('提1.35kg篮子到旁边桌子上')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.WOLF_table.setItem(16, 0, item)
        item = QtWidgets.QTableWidgetItem('总分')
        item.setTextAlignment(Qt.AlignHCenter | Qt.AlignVCenter)
        self.WOLF_table.setItem(17, 0, item)


        self.label_66 = QtWidgets.QLabel(self.page_8)
        self.label_66.setGeometry(QtCore.QRect(20, 550, 1460,100))
        self.label_66.setStyleSheet("font:12pt")
        self.label_66.setWordWrap(True)

        self.label_67 = QtWidgets.QLabel(self.page_8)
        self.label_67.setGeometry(QtCore.QRect(60, 640, 1460, 50))
        self.label_67.setStyleSheet("font:12pt")
        self.label_67.setWordWrap(True)

        self.label_68 = QtWidgets.QLabel(self.page_8)
        self.label_68.setGeometry(QtCore.QRect(60, 690, 1460, 50))
        self.label_68.setStyleSheet("font:12pt")
        self.label_68.setWordWrap(True)

        self.label_69 = QtWidgets.QLabel(self.page_8)
        self.label_69.setGeometry(QtCore.QRect(60, 740, 1460,60))
        self.label_69.setStyleSheet("font:12pt")
        self.label_69.setWordWrap(True)

        self.label_70 = QtWidgets.QLabel(self.page_8)
        self.label_70.setGeometry(QtCore.QRect(60, 800, 1460, 50))
        self.label_70.setStyleSheet("font:12pt")
        self.label_70.setWordWrap(True)

        self.label_71 = QtWidgets.QLabel(self.page_8)
        self.label_71.setGeometry(QtCore.QRect(60, 840, 1460, 50))
        self.label_71.setStyleSheet("font:12pt")
        self.label_71.setWordWrap(True)

        self.label_72 = QtWidgets.QLabel(self.page_8)
        self.label_72.setGeometry(QtCore.QRect(60, 880, 1460, 50))
        self.label_72.setStyleSheet("font:12pt")
        self.label_72.setWordWrap(True)

        self.label_73 = QtWidgets.QLabel(self.page_8)
        self.label_73.setGeometry(QtCore.QRect(20, 940, 260, 40))
        self.label_73.setStyleSheet("font:16pt")

        self.WOLF_dateEdit = QtWidgets.QDateEdit(QDate.currentDate(), self.page_8)
        self.WOLF_dateEdit.setGeometry(QtCore.QRect(170, 940, 260, 40))
        self.WOLF_dateEdit.setStyleSheet("font:16pt;background:white")
        self.WOLF_dateEdit.setCalendarPopup(True)

        self.WOLF_saveButton = QtWidgets.QPushButton(self.page_8)
        self.WOLF_saveButton.setGeometry(QtCore.QRect(450, 940, 120, 40))
        self.WOLF_saveButton.setStyleSheet("background-color:rgb(1, 144, 202);font:12pt;color:white")

        self.WOLF_downLoadButton = QtWidgets.QPushButton(self.page_8)
        self.WOLF_downLoadButton.setGeometry(QtCore.QRect(590, 940, 120, 40))
        self.WOLF_downLoadButton.setStyleSheet("background-color:rgb(1, 144, 202);font:12pt;color:white")

        self.stackedWidget.addWidget(self.page_8)
        MainWindow.setCentralWidget(self.centralwidget)
        self.stackedWidget.setCurrentIndex(0)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "手与上肢感觉运动功能评定"))
        self.label.setText(_translate("MainWindow", "手与上肢感觉运动功能评定"))
        self.label_2.setText(_translate("MainWindow", "VAS疼痛视觉模拟"))
        self.label_3.setText(_translate("MainWindow", "姓名:"))
        self.vas_name.setText(_translate("MainWindow", "--"))
        self.label_4.setText(_translate("MainWindow", "性别:"))
        self.vas_gender.setText(_translate("MainWindow", "--"))
        self.label_5.setText(_translate("MainWindow", "年龄:"))
        self.vas_age.setText(_translate("MainWindow", "--"))
        self.label_6.setText(_translate("MainWindow", "患手:"))
        self.vas_hand.setText(_translate("MainWindow", "--"))
        self.label_7.setText(_translate("MainWindow", "无痛"))
        self.label_8.setText(_translate("MainWindow", "剧痛"))
        self.label_9.setText(_translate("MainWindow", "0"))
        self.label_10.setText(_translate("MainWindow", "1"))
        self.label_11.setText(_translate("MainWindow", "2"))
        self.label_12.setText(_translate("MainWindow", "3"))
        self.label_13.setText(_translate("MainWindow", "4"))
        self.label_14.setText(_translate("MainWindow", "5"))
        self.label_15.setText(_translate("MainWindow", "6"))
        self.label_16.setText(_translate("MainWindow", "7"))
        self.label_17.setText(_translate("MainWindow", "8"))
        self.label_18.setText(_translate("MainWindow", "9"))
        self.label_19.setText(_translate("MainWindow", "10"))
        self.label_20.setText(_translate("MainWindow", "上肢疼痛部位:"))
        self.label_21.setText(_translate("MainWindow", "结果:"))
        self.label_22.setText(_translate("MainWindow", "评定日期:"))
        self.vas_saveButton.setText(_translate("MainWindow", "保存"))
        self.vas_downLoadButton.setText(_translate("MainWindow", "导出"))
        self.label_23.setText(_translate("MainWindow",'简化Fugl-Meyer运动功能评分法'))
        self.label_24.setText(_translate("MainWindow", "姓名:"))
        self.FuglMeyerMotion_name.setText(_translate("MainWindow", "--"))
        self.label_25.setText(_translate("MainWindow", "性别:"))
        self.FuglMeyerMotion_gender.setText(_translate("MainWindow", "--"))
        self.label_26.setText(_translate("MainWindow", "年龄:"))
        self.FuglMeyerMotion_age.setText(_translate("MainWindow", "--"))
        self.label_27.setText(_translate("MainWindow", "患手:"))
        self.FuglMeyerMotion_hand.setText(_translate("MainWindow", "--"))
        self.label_28.setText(_translate("MainWindow", "总分:"))
        self.FuglMeyerMotion_totalscore.setText(_translate("MainWindow", "--"))
        self.label_29.setText(_translate("MainWindow", "腕部得分:"))
        self.label_30.setText(_translate("MainWindow", "手部得分:"))
        self.label_31.setText(_translate("MainWindow", "评定日期:"))
        item = self.FuglMeyerMotion_tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "评估内容\评分"))
        item = self.FuglMeyerMotion_tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "0分"))
        item = self.FuglMeyerMotion_tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "1分"))
        item = self.FuglMeyerMotion_tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "2分"))
        item = self.FuglMeyerMotion_tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "评分"))
        self.FuglMeyerMotion_saveButton.setText(_translate("MainWindow", "保存"))
        self.FuglMeyerMotion_uploadButton.setText(_translate("MainWindow", "导出"))
        self.label_32.setText(_translate("MainWindow", "上肢与手感觉功能评测（Fugl-meyer评测法）"))
        self.label_33.setText(_translate("MainWindow", "姓名:"))
        self.FuglMSensation_name.setText(_translate("MainWindow", "--"))
        self.label_34.setText(_translate("MainWindow", "性别:"))
        self.FuglMSensation_gender.setText(_translate("MainWindow", "--"))
        self.label_35.setText(_translate("MainWindow", "年龄:"))
        self.FuglMSensation_age.setText(_translate("MainWindow", "--"))
        self.label_36.setText(_translate("MainWindow", "患手:"))
        self.FuglMSensation_hand.setText(_translate("MainWindow", "--"))
        item = self.FuglMSensation_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "感觉测试"))
        item = self.FuglMSensation_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "部位"))
        item = self.FuglMSensation_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "初期评定"))
        item = self.FuglMSensation_table.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "中期评定"))
        item = self.FuglMSensation_table.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "末期评定"))
        self.label_37.setText(_translate("MainWindow", "评定日期:"))
        self.FuglMSensation_saveButton.setText(_translate("MainWindow", "保存"))
        self.FuglMSensation_downLoadButton.setText(_translate("MainWindow", "导出"))
        self.label_38.setText(_translate("MainWindow", "手运动功能状态评分"))
        self.label_39.setText(_translate("MainWindow", "姓名:"))
        self.handFunctionMotion_name.setText(_translate("MainWindow", "--"))
        self.label_40.setText(_translate("MainWindow", "性别:"))
        self.handFunctionMotion_gender.setText(_translate("MainWindow", "--"))
        self.label_41.setText(_translate("MainWindow", "年龄:"))
        self.handFunctionMotion_age.setText(_translate("MainWindow", "--"))
        self.label_42.setText(_translate("MainWindow", "患手:"))
        self.handFunctionMotion_hand.setText(_translate("MainWindow", "--"))
        item = self.handFunctionMotion_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "分数"))
        item = self.handFunctionMotion_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "标准"))
        item = self.handFunctionMotion_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "评定结果(在相应等级的框内打√)"))
        self.label_43.setText(_translate("MainWindow", "评定日期:"))
        self.handFunctionMotion_saveButton.setText(_translate("MainWindow", "保存"))
        self.handFunctionMotion_downLoadButton.setText(_translate("MainWindow", "导出"))
        self.label_44.setText(_translate("MainWindow", "积木障碍盒测试"))
        self.label_45.setText(_translate("MainWindow", "姓名:"))
        self.BBT_name.setText(_translate("MainWindow", "--"))
        self.label_46.setText(_translate("MainWindow", "性别:"))
        self.BBT_gender.setText(_translate("MainWindow", "--"))
        self.label_47.setText(_translate("MainWindow", "年龄:"))
        self.BBT_age.setText(_translate("MainWindow", "--"))
        self.label_48.setText(_translate("MainWindow", "患手:"))
        self.BBT_hand.setText(_translate("MainWindow", "--"))
        self.BBT_saveButton.setText(_translate("MainWindow", "保存"))
        self.BBT_downLoadButton.setText(_translate("MainWindow", "导出"))
        self.label_49.setText(_translate("MainWindow", "九孔柱测试（Nine Hole Peg Test）"))
        self.label_50.setText(_translate("MainWindow", "姓名:"))
        self.NineHolePegTest_name.setText(_translate("MainWindow", "--"))
        self.label_51.setText(_translate("MainWindow", "性别:"))
        self.NineHolePegTest_gender.setText(_translate("MainWindow", "--"))
        self.label_52.setText(_translate("MainWindow", "年龄:"))
        self.NineHolePegTest_age.setText(_translate("MainWindow", "--"))
        self.label_53.setText(_translate("MainWindow", "患手:"))
        self.NineHolePegTest_hand.setText(_translate("MainWindow", "--"))
        self.NineHolePegTest_saveButton.setText(_translate("MainWindow", "保存"))
        self.NineHolePegTest_downLoadButton.setText(_translate("MainWindow", "导出"))
        self.label_54.setText(_translate("MainWindow", "手臂动作调查测试表（ARAT）"))
        self.label_55.setText(_translate("MainWindow", "姓名:"))
        self.ARAT_name.setText(_translate("MainWindow", "--"))
        self.label_56.setText(_translate("MainWindow", "性别:"))
        self.ARAT_gender.setText(_translate("MainWindow", "--"))
        self.label_57.setText(_translate("MainWindow", "年龄:"))
        self.ARAT_age.setText(_translate("MainWindow", "--"))
        self.label_58.setText(_translate("MainWindow", "患手:"))
        self.ARAT_hand.setText(_translate("MainWindow", "--"))
        item = self.ARAT_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "ARAT"))
        item = self.ARAT_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", ""))
        item = self.ARAT_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "评分1"))
        item = self.ARAT_table.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "评分2"))
        item = self.ARAT_table.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "评分3"))
        self.label_59.setText(_translate("MainWindow",
                                        "手臂动作调查测试（Action Research Arm "
                                        "Test，ARAT）分四部分（抓、握、捏和粗大运动），共19项。每项为4级评分（0=不能完成；1=只能完成一部分；2=能完成，但动作慢或笨拙；3"
                                        "=能正确地完成），总分为57分。简便、快速，可*性高（ICC=0.99）。缺点为：需较多工具和设备"))
        self.label_60.setText(_translate("MainWindow", "评定日期:"))
        self.ARAT_saveButton.setText(_translate("MainWindow", "保存"))
        self.ARAT_downLoadButton.setText(_translate("MainWindow", "导出"))
        self.label_61.setText(_translate("MainWindow", "WOLF运动功能评价量表（WMFT）"))
        self.label_62.setText(_translate("MainWindow", "姓名:"))
        self.WOLF_name.setText(_translate("MainWindow", "--"))
        self.label_63.setText(_translate("MainWindow", "性别:"))
        self.WOLF_gender.setText(_translate("MainWindow", "--"))
        self.label_64.setText(_translate("MainWindow", "年龄:"))
        self.WOLF_age.setText(_translate("MainWindow", "--"))
        self.label_65.setText(_translate("MainWindow", "患手:"))
        self.WOLF_hand.setText(_translate("MainWindow", "--"))
        self.label_66.setText(_translate("MainWindow",
                                        "WMFT由15个项目组成．1—6为简单的关节运动．7一15为复合的功能动作(表1)。对所有动作当场进行计时和动作质量打分(O一5分，6个分级)，目前该量表的评价手册还没有进行汉化，以下是评测项目和评分标准。WMFT功能能力评分："))
        self.label_67.setText(_translate("MainWindow", "0分：所测试的上肢没有尝试参与测试"))
        self.label_68.setText(_translate("MainWindow", "1分：所测试的上肢没有功能性的参与但试图参加．在单侧动作的测试中．未被测试的上肢有可能帮助测试上肢。"))
        self.label_69.setText(_translate("MainWindow",
                                        "2分：所测试的上肢参与测试并完成任务．但需要未测试上肢的帮助．如小的调整或变换位置．或需要2次尝试才能完成任务．或完成任务非常慢。在双侧任务中，被测试上肢功能损害非常严重。只能作为辅助。"))
        self.label_70.setText(_translate("MainWindow", "3分：所测试的上肢参与测试并完成任务．但是动作受到协同运动的一些影响。或动作完成较慢及需要努力才能完成。"))
        self.label_71.setText(_translate("MainWindow", "4分：所测试的上肢参与测试并完成任务，动作接近正常．但是完成速度轻度变慢，或缺乏精确度．良好的协调和流畅性。"))
        self.label_72.setText(_translate("MainWindow", "5分：所测试的上肢参与测试并完成任务．表现为正常动作。以健侧上肢动作为正常标准。"))
        self.label_73.setText(_translate("MainWindow", "评定日期:"))
        self.WOLF_saveButton.setText(_translate("MainWindow", "保存"))
        self.WOLF_downLoadButton.setText(_translate("MainWindow", "导出"))







class HandSensorimotorFunctionAssessment(QtWidgets.QMainWindow, Ui_MainWindow):
    def __init__(self,patient_id):
        super(HandSensorimotorFunctionAssessment, self).__init__()
        self.setupUi(self)
        self.patient_id = patient_id

        self.patientInfo = \
            json.loads(requests.post(config.patientGetById, data={'id': self.patient_id}).content.decode('utf-8'))[
             'data']

        self.vas_name.setText(self.patientInfo['name'])
        self.vas_age.setText(str(self.patientInfo['age']))
        self.vas_gender.setText(self.patientInfo['sex'])
        self.vas_hand.setText(self.patientInfo['illness'])

        self.FuglMeyerMotion_name.setText(self.patientInfo['name'])
        self.FuglMeyerMotion_age.setText(str(self.patientInfo['age']))
        self.FuglMeyerMotion_gender.setText(self.patientInfo['sex'])
        self.FuglMeyerMotion_hand.setText(self.patientInfo['illness'])

        self.handFunctionMotion_name.setText(self.patientInfo['name'])
        self.handFunctionMotion_age.setText(str(self.patientInfo['age']))
        self.handFunctionMotion_gender.setText(self.patientInfo['sex'])
        self.handFunctionMotion_hand.setText(self.patientInfo['illness'])

        self.BBT_name.setText(self.patientInfo['name'])
        self.BBT_age.setText(str(self.patientInfo['age']))
        self.BBT_gender.setText(self.patientInfo['sex'])
        self.BBT_hand.setText(self.patientInfo['illness'])

        self.NineHolePegTest_name.setText(self.patientInfo['name'])
        self.NineHolePegTest_age.setText(str(self.patientInfo['age']))
        self.NineHolePegTest_gender.setText(self.patientInfo['sex'])
        self.NineHolePegTest_hand.setText(self.patientInfo['illness'])

        self.ARAT_name.setText(self.patientInfo['name'])
        self.ARAT_age.setText(str(self.patientInfo['age']))
        self.ARAT_gender.setText(self.patientInfo['sex'])
        self.ARAT_hand.setText(self.patientInfo['illness'])

        self.WOLF_name.setText(self.patientInfo['name'])
        self.WOLF_age.setText(str(self.patientInfo['age']))
        self.WOLF_gender.setText(self.patientInfo['sex'])
        self.WOLF_hand.setText(self.patientInfo['illness'])


        self.totalComBox.currentIndexChanged.connect(self.totalComBoxClick)
        self.vas_saveButton.clicked.connect(self.vas_saveButtonClick)
        self.vas_downLoadButton.clicked.connect(self.vas_downLoadButtonClick)
        self.FuglMeyerMotion_saveButton.clicked.connect(self.FuglMeyerMotion_saveButtonClick)
        self.FuglMeyerMotion_uploadButton.clicked.connect(self.FuglMeyerMotion_uploadButtonClick)
        self.FuglMSensation_saveButton.clicked.connect(self.FuglMSensation_saveButtonClick)
        self.FuglMSensation_downLoadButton.clicked.connect(self.FuglMSensation_downLoadButtonClick)
        self.handFunctionMotion_saveButton.clicked.connect(self.handFunctionMotion_saveButtonClick)
        self.handFunctionMotion_downLoadButton.clicked.connect(self.handFunctionMotion_downLoadButtonClick)
        self.BBT_saveButton.clicked.connect(self.BBT_saveButtonClick)
        self.BBT_downLoadButton.clicked.connect(self.BBT_downLoadButtonClick)
        self.NineHolePegTest_saveButton.clicked.connect(self.NineHolePegTest_saveButtonClick)
        self.NineHolePegTest_downLoadButton.clicked.connect(self.NineHolePegTest_downLoadButtonClick)
        self.ARAT_saveButton.clicked.connect(self.ARAT_saveButtonClick)
        self.ARAT_downLoadButton.clicked.connect(self.ARAT_downLoadButtonClick)
        self.WOLF_saveButton.clicked.connect(self.WOLF_saveButtonClick)
        self.WOLF_downLoadButton.clicked.connect(self.WOLF_downLoadButtonClick)









    def totalComBoxClick(self, *args):
        if(self.totalComBox.currentIndex()==1):
            self.stackedWidget.setCurrentIndex(0)
        elif(self.totalComBox.currentIndex()==2):
            self.stackedWidget.setCurrentIndex(1)
        elif (self.totalComBox.currentIndex() == 3):
            self.stackedWidget.setCurrentIndex(2)
        elif (self.totalComBox.currentIndex() == 4):
            self.stackedWidget.setCurrentIndex(3)
        elif (self.totalComBox.currentIndex() == 5):
            self.stackedWidget.setCurrentIndex(4)
        elif (self.totalComBox.currentIndex() == 6):
            self.stackedWidget.setCurrentIndex(5)
        elif (self.totalComBox.currentIndex() == 7):
            self.stackedWidget.setCurrentIndex(6)
        else:
            self.stackedWidget.setCurrentIndex(7)

    def vas_saveButtonClick(self, *args):
        code_1 = str(self.vas_s1.value())
        code_2 = self.vas_upperExtremityPain.text()
        code_3 = self.vas_result
        test_date = self.vas_dateEdit.text().replace("/", "-")
        sheet = {'id': tool.Tools.getTimeStamp(), 'patient_id': self.patient_id, 'code_1': code_1, 'code_2': code_2,
                 'code_3': code_3, 'test_date': test_date}
        res = requests.post(config.VASInsert, data=sheet)
        QMessageBox.information(self, "保存", '保存成功', QMessageBox.Yes, QMessageBox.Yes)
        ...

    def vas_downLoadButtonClick(self, *args):
        self.vas_saveButton.hide()
        self.vas_downLoadButton.hide()
        img = self.grab()
        self.vas_saveButton.show()
        self.vas_downLoadButton.show()
        path = QFileDialog.getExistingDirectory()
        img.save(
            f"{path}/{self.vas_name.text()}_{self.vas_dateEdit.text().replace('/', '-')}_{self.totalComBox.currentText()}.png")
        QMessageBox.information(self, "导出", '导出成功', QMessageBox.Yes, QMessageBox.Yes)
        ...

    def FuglMeyerMotion_saveButtonClick(self, *args):
        code_1 = self.FuglMeyerMotion_totalscore.text()
        code_2 = self.FuglMeyerMotion_handScore.text()
        code_3 = self.FuglMeyerMotion_wristScore.text()
        test_date = self.FuglMeyerMotion_date.text().replace('/', '-')
        sheet = {'id': tool.Tools.getTimeStamp(), 'patient_id': self.patient_id, 'code_1': code_1, 'code_2': code_2,
                 'code_3': code_3, 'test_date': test_date}
        res = requests.post(config.ashworthInsert, data=sheet)
        QMessageBox.information(self, "保存", '保存成功', QMessageBox.Yes, QMessageBox.Yes)
        ...

    def FuglMeyerMotion_uploadButtonClick(self, *args):
        self.FuglMeyerMotion_saveButton.hide()
        self.FuglMeyerMotion_uploadButton.hide()
        img = self.grab()
        self.FuglMeyerMotion_saveButton.show()
        self.FuglMeyerMotion_uploadButton.show()
        path = QFileDialog.getExistingDirectory()
        img.save(f"{path}/{self.FuglMeyerMotion_name.text()}_{self.FuglMeyerMotion_date.text().replace('/', '-')}_{self.totalComBox.currentText()}.png")
        ...

    def FuglMSensation_saveButtonClick(self, *args):
        test_date = self.FuglMSensation_dateEdit.text().replace('/', '-')
        sheet = {'id': tool.Tools.getTimeStamp(), 'patient_id': self.patient_id, 'test_date': test_date}
        res = requests.post(config.ashworthInsert, data=sheet)
        QMessageBox.information(self, "保存", '保存成功', QMessageBox.Yes, QMessageBox.Yes)
        ...

    def FuglMSensation_downLoadButtonClick(self, *args):
        self.FuglMSensation_saveButton.hide()
        self.FuglMSensation_downLoadButton.hide()
        img = self.grab()
        self.FuglMSensation_saveButton.show()
        self.FuglMSensation_downLoadButton.show()
        path = QFileDialog.getExistingDirectory()
        img.save(f"{path}/{self.FuglMSensation_name.text()}_{self.FuglMSensation_dateEdit.text().replace('/', '-')}_{self.totalComBox.currentText()}.png")
        ...

    def handFunctionMotion_saveButtonClick(self, *args):
        test_date = self.handFunctionMotion_dateEdit.text().replace('/', '-')
        sheet = {'id': tool.Tools.getTimeStamp(), 'patient_id': self.patient_id, 'test_date': test_date}
        res = requests.post(config.ashworthInsert, data=sheet)
        QMessageBox.information(self, "保存", '保存成功', QMessageBox.Yes, QMessageBox.Yes)
        ...

    def handFunctionMotion_downLoadButtonClick(self, *args):
        self.handFunctionMotion_saveButton.hide()
        self.handFunctionMotion_downLoadButton.hide()
        img = self.grab()
        self.handFunctionMotion_saveButton.show()
        self.handFunctionMotion_downLoadButton.show()
        path = QFileDialog.getExistingDirectory()
        img.save(f"{path}/{self.handFunctionMotion_name.text()}_{self.handFunctionMotion_dateEdit.text().replace('/', '-')}_{self.totalComBox.currentText()}.png")
        ...
    def BBT_saveButtonClick(self, *args):
        code_1 = self.BBT_handComBox1.currentText()
        code_2 = self.BBT_handComBox2.currentText()
        code_3 = self.BBT_handComBox3.currentText()
        code_4 = self.BBT_handComBox4.currentText()
        test_date = self.BBT_dateEdit.text().replace('/', '-')
        sheet = {'id': tool.Tools.getTimeStamp(), 'patient_id': self.patient_id, 'code_1': code_1, 'code_2': code_2,
                 'code_3': code_3, 'code_4': code_4, 'test_date': test_date}
        res = requests.post(config.ashworthInsert, data=sheet)
        QMessageBox.information(self, "保存", '保存成功', QMessageBox.Yes, QMessageBox.Yes)
        ...

    def BBT_downLoadButtonClick(self, *args):
        self.BBT_saveButton.hide()
        self.BBT_downLoadButton.hide()
        img = self.grab()
        self.BBT_saveButton.show()
        self.BBT_downLoadButton.show()
        path = QFileDialog.getExistingDirectory()
        img.save(f"{path}/{self.BBT_name.text()}_{self.BBT_dateEdit.text().replace('/', '-')}_{self.totalComBox.currentText()}.png")
        ...

    def NineHolePegTest_saveButtonClick(self, *args):
        code_1 = self.NineHolePegTest_handComBox1.currentText()
        code_2 = self.NineHolePegTest_handComBox2.currentText()
        code_3 = self.NineHolePegTest_handComBox3.currentText()
        code_4 = self.NineHolePegTest_handComBox4.currentText()
        test_date = self.NineHolePegTest_dateEdit.text().replace('/', '-')
        sheet = {'id': tool.Tools.getTimeStamp(), 'patient_id': self.patient_id, 'code_1': code_1, 'code_2': code_2,
                 'code_3': code_3, 'code_4': code_4, 'test_date': test_date}
        res = requests.post(config.ashworthInsert, data=sheet)
        QMessageBox.information(self, "保存", '保存成功', QMessageBox.Yes, QMessageBox.Yes)
        ...

    def NineHolePegTest_downLoadButtonClick(self, *args):
        self.NineHolePegTest_saveButton.hide()
        self.NineHolePegTest_downLoadButton.hide()
        img = self.grab()
        self.NineHolePegTest_saveButton.show()
        self.NineHolePegTest_downLoadButton.show()
        path = QFileDialog.getExistingDirectory()
        img.save(
            f"{path}/{self.BBT_name.text()}_{self.NineHolePegTest_dateEdit.text().replace('/', '-')}_{self.totalComBox.currentText()}.png")

        ...

    def ARAT_saveButtonClick(self, *args):
        test_date = self.ARAT_dateEdit.text().replace('/', '-')
        sheet = {'id': tool.Tools.getTimeStamp(), 'patient_id': self.patient_id, 'test_date': test_date}
        res = requests.post(config.ashworthInsert, data=sheet)
        QMessageBox.information(self, "保存", '保存成功', QMessageBox.Yes, QMessageBox.Yes)
        ...

    def ARAT_downLoadButtonClick(self, *args):
        self.ARAT_saveButton.hide()
        self.ARAT_downLoadButton.hide()
        img = self.grab()
        self.ARAT_saveButton.show()
        self.ARAT_downLoadButton.show()
        path = QFileDialog.getExistingDirectory()
        img.save(
            f"{path}/{self.BBT_name.text()}_{self.ARAT_dateEdit.text().replace('/', '-')}_{self.totalComBox.currentText()}.png")

        ...

    def WOLF_saveButtonClick(self, *args):
        test_date = self.WOLF_dateEdit.text().replace('/', '-')
        sheet = {'id': tool.Tools.getTimeStamp(), 'patient_id': self.patient_id, 'test_date': test_date}
        res = requests.post(config.ashworthInsert, data=sheet)
        QMessageBox.information(self, "保存", '保存成功', QMessageBox.Yes, QMessageBox.Yes)
        ...

    def WOLF_downLoadButtonClick(self, *args):
        self.WOLF_saveButton.hide()
        self.WOLF_downLoadButton.hide()
        img = self.grab()
        self.WOLF_saveButton.show()
        self.WOLF_downLoadButton.show()
        path = QFileDialog.getExistingDirectory()
        img.save(
            f"{path}/{self.BBT_name.text()}_{self.WOLF_dateEdit.text().replace('/', '-')}_{self.totalComBox.currentText()}.png")

        ...

if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    gui = HandSensorimotorFunctionAssessment()
    gui.show()
    sys.exit(app.exec_())
