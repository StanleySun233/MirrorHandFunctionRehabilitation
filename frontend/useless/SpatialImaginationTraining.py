# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys

from PyQt5 import QtCore, QtGui, QtWidgets

import frontend.BasicTraining


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.resize(1800, 800)  # (2200,1400)
        MainWindow.setStyleSheet("background-color:white")
        self.centralwidget = QtWidgets.QWidget(MainWindow)

        # self.label = QtWidgets.QLabel(self.centralwidget)
        # self.label.setGeometry(QtCore.QRect(10, 0, 2180, 1200))
        # self.label.setStyleSheet("background-color:  white ")

        self.background_label = QtWidgets.QLabel(self.centralwidget)
        self.background_label.setGeometry(QtCore.QRect(10, 69, 1800, 2))
        self.background_label.setStyleSheet("background-color:#FFD700")

        self.spatialImaginationRaining = QtWidgets.QPushButton(self.centralwidget)  # 空间想象训练
        self.spatialImaginationRaining.setGeometry(QtCore.QRect(10, 0, 200, 70))
        self.spatialImaginationRaining.setStyleSheet(
            '''QPushButton{background-color: #FFD700;color:white;font:16pt;border:1px groove white;}''')

        self.basicFunctionalTrainingButton = QtWidgets.QPushButton(self.centralwidget)
        self.basicFunctionalTrainingButton.setGeometry(QtCore.QRect(210, 0, 200, 70))
        self.basicFunctionalTrainingButton.setStyleSheet(
            '''QPushButton{color: black;font:16pt;border:1px groove white;}QPushButton:hover{background-color: 
            #FFD700;color:white}QPushButton:pressed{background-color: rgba(235, 235, 235,100);}''')

        self.functionalTrainingButton = QtWidgets.QPushButton(self.centralwidget)
        self.functionalTrainingButton.setGeometry(QtCore.QRect(410, 0, 200, 70))
        self.functionalTrainingButton.setStyleSheet(
            '''QPushButton{color: black;font:16pt;border:1px groove white;}QPushButton:hover{background-color: 
            #FFD700;color:white}QPushButton:pressed{background-color: rgba(235, 235, 235,100);}''')

        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(40, 140, 250, 60))
        self.label_2.setText("训练参数设置")
        self.label_2.setStyleSheet("color:#FFD700;font:16pt")

        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(50, 210, 250, 60))
        self.label_3.setText("图片总数(张):")
        self.label_3.setStyleSheet("color:black;font:14pt")

        self.pictureSelect = QtWidgets.QComboBox(self.centralwidget)
        self.pictureSelect.addItems(['', '5', '10'])
        self.pictureSelect.setGeometry(QtCore.QRect(260, 220, 140, 40))  # 图片数量选择

        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(420, 210, 250, 60))
        self.label_4.setText("播放速率(秒):")
        self.label_4.setStyleSheet("color:black;font:14pt")

        self.playSpeed = QtWidgets.QComboBox(self.centralwidget)
        self.playSpeed.addItems(['', '5', '10'])
        self.playSpeed.setGeometry(QtCore.QRect(620, 220, 140, 40))  # 播放速率选择

        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(780, 210, 250, 60))
        self.label_5.setText("辨别难度:")
        self.label_5.setStyleSheet("color:black;font:14pt")

        self.recognitionDifficult = QtWidgets.QComboBox(self.centralwidget)
        self.recognitionDifficult.addItems(['', '简单', '中等', '困难'])
        self.recognitionDifficult.setGeometry(QtCore.QRect(920, 220, 140, 40))  # 辨别难度选择

        self.startTrainButton = QtWidgets.QPushButton(self.centralwidget)  # 开始训练
        self.startTrainButton.setGeometry(QtCore.QRect(780, 280, 180, 60))
        self.startTrainButton.setStyleSheet(
            '''QPushButton{background-color: #FFD700;color:white;font:14pt;border:1px groove white}''')

        self.Dividing_line = QtWidgets.QLabel(self.centralwidget)  # 分割线
        self.Dividing_line.setGeometry(QtCore.QRect(40, 350, 1040, 2))
        self.Dividing_line.setStyleSheet("background-color:	#DCDCDC")

        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(40, 370, 250, 60))
        self.label_6.setText("训练情况")
        self.label_6.setStyleSheet("color:#FFD700;font:16pt")

        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(40, 440, 250, 60))
        self.label_7.setText("总共(张):       --")
        self.label_7.setFont(font)

        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(40, 500, 250, 60))
        self.label_8.setText("正确数(张):     --")
        self.label_8.setFont(font)

        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(40, 560, 250, 60))
        self.label_9.setText("正确率(%):      --")
        self.label_9.setFont(font)

        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(40, 620, 250, 60))
        self.label_10.setText("平均耗时(%):    --")
        self.label_10.setFont(font)

        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(320, 620, 250, 60))
        self.label_11.setText("左手平均(秒):      --")
        self.label_11.setFont(font)

        self.label_12 = QtWidgets.QLabel(self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(320, 560, 260, 60))
        self.label_12.setText("左手正确率(%):     --")
        self.label_12.setFont(font)

        self.label_13 = QtWidgets.QLabel(self.centralwidget)
        self.label_13.setGeometry(QtCore.QRect(320, 500, 260, 60))
        self.label_13.setText("左手正确(张):      --")
        self.label_13.setFont(font)

        self.label_14 = QtWidgets.QLabel(self.centralwidget)
        self.label_14.setGeometry(QtCore.QRect(320, 440, 260, 60))
        self.label_14.setText("当前(张):          --")
        self.label_14.setFont(font)

        self.label_15 = QtWidgets.QLabel(self.centralwidget)
        self.label_15.setGeometry(QtCore.QRect(640, 440, 260, 60))
        self.label_15.setText("剩余(张):          --")
        self.label_15.setFont(font)

        self.label_16 = QtWidgets.QLabel(self.centralwidget)
        self.label_16.setGeometry(QtCore.QRect(640, 500, 260, 60))
        self.label_16.setText("右手正确(张):      --")
        self.label_16.setFont(font)

        self.label_17 = QtWidgets.QLabel(self.centralwidget)
        self.label_17.setGeometry(QtCore.QRect(640, 620, 250, 60))
        self.label_17.setText("右手平均(秒):      --")
        self.label_17.setFont(font)

        self.label_18 = QtWidgets.QLabel(self.centralwidget)
        self.label_18.setGeometry(QtCore.QRect(640, 560, 260, 60))
        self.label_18.setText("右手正确率(%):     --")
        self.label_18.setFont(font)

        self.picture = QtWidgets.QLabel(self.centralwidget)  # 图片显示
        self.picture.setGeometry(QtCore.QRect(1230, 130, 500, 550))
        self.picture.setStyleSheet(" border:1px groove 	#BEBEBE")

        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.spatialImaginationRaining.setText(_translate("MainWindow", "空间想象训练"))
        self.basicFunctionalTrainingButton.setText(_translate("MainWindow", "基本动作训练"))
        self.functionalTrainingButton.setText(_translate("MainWindow", "功能动作训练"))
        self.startTrainButton.setText(_translate("MainWindow", "开始训练"))


class SpatialImaginationTraining(QtWidgets.QMainWindow, Ui_MainWindow):
    # singal = pyqtSignal(list)
    def __init__(self):
        super(SpatialImaginationTraining, self).__init__()
        self.setupUi(self)

        self.basicFunctionalTrainingButton.mousePressEvent = self.basicFunctionalTrainingButtonLeftClick
        self.functionalTrainingButton.mousePressEvent = self.functionalTrainingButtonLeftClick
        self.startTrainButton.mousePressEvent = self.startTrainButtonClick
        self.pictureSelect.mousePressEvent = self.pictureSelectClick
        self.playSpeed.mousePressEvent = self.playSpeedClick
        self.recognitionDifficult.mousePressEvent = self.recognitionDifficultClick

        self.spatialTrainingPatientWindow = frontend.SpatialImaginationTrainingPatient.SpatialImaginationTrainingPatient()
        self.spatialTrainingPatientWindow.show()

    def closeEvent(self, a0: QtGui.QCloseEvent):
        self.spatialTrainingPatientWindow.close()

    def basicFunctionalTrainingButtonLeftClick(self, *args):
        basicFunctionalTraining = frontend.BasicTraining.BasicTraining()
        basicFunctionalTraining.show()
        self.close()

    def functionalTrainingButtonLeftClick(self, *args):
        functionalTraining = frontend.FunctionalTraining.FunctionalTraining()
        functionalTraining.show()
        self.close()
        ...

    def startTrainButtonClick(self, *args):  # 开始训练
        ...

    def pictureSelectClick(self, *args):  # 获取图片选择的数量，从数据库中调用图片
        ...

    def playSpeedClick(self, *args):  # 获取图片播放的速度，决定每一张图片显示的时间
        ...

    def recognitionDifficultClick(self, *args):  # 获取图片识别难度，从数据库中调用相应难度的图片
        ...

    def switchMainPicture(self, img):
        self.picture.setPixmap(img)


if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    gui = SpatialImaginationTraining()
    gui.show()
    sys.exit(app.exec_())
